{"pages":[],"posts":[{"title":"SpringBoot 笔记","slug":"19-09/SpringBoot 笔记","date":"2019-09-29T16:00:00.000Z","updated":"2019-09-30T06:34:46.513Z","comments":true,"path":"article/java/319f3669.html","link":"","permalink":"https://inkss.cn/article/java/319f3669.html","excerpt":"","text":"Spring 注解123456789101112131415161718192021@Controller //注解：表明该类是控制类@RequestMapping //注解：处理请求@ResponseBody //注解：返回数据给浏览器//===================================@Controllerpublic class HelloController &#123; @ResponseBody @RequestMapping(\"/hello\") public String hello()&#123;&#125;&#125;//↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓@RestControllerpublic class HelloController &#123; @RequestMapping(\"/hello\") public String hello()&#123;&#125;&#125;//@RestController 注解：可以视为 Controller 和 ResponseBody//================================= SpringBoot 静态文件存放位置默认的静态文件位置（resources 所在目录为 classpath）：1234567/src/main/resources ├── resources │ └── 静态文件 ├── public │ └── 静态文件 └── static └── 静态文件如何修改（如果修改，默认的静态文件失效）：1spring.resources.static-locations=classpath:/resources,classpath:/public图标和 index 也是在静态资源文件夹中寻找。 SpringBoot 日志SLF4j12Logger logger = LoggerFactory.getLogger(HelloWorld.class);logger.info(\"Hello World\"); // 日志级别 trace&lt;debug&lt;info&lt;warn&lt;errorSpringBoot 底层使用 slf4j+logback 实现。修改日志存储位置：123456# 指定级别logging.level.com.xxxxxx=trace# 格式化显示logging.pattern.console=%clr(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;)&#123;faint&#125; %clr(%5p) %clr(---)&#123;faint&#125; %clr([%-80.80logger&#123;79&#125;])&#123;cyan&#125; %clr(:)&#123;faint&#125; %m%n# 指定位置logging.file=filename.log SpringBoot 配置文件位置默认的位置（优先级由高到低）（高优先级覆盖低优先级）（不同内容互补）：1234- file:./config/- file:./- classpath:/config/- classpath:/使用配置文件追加：1spring.config.location=使用命令行参数指定配置文件：java -jar xxxxx.jar --spring.config.location=xxxxx SpringBoot 配置文件全局配置文件：application.properties application.ymlyaml 示例：12server: port: 8081properties 示例：1server.port=8081 SpringBoot 自动配置原理主配置类 @SpringBootApplication主配置类开启自动配置 @EnableAutoConfiguration进一步的给容器导入组件 @Import({AutoConfigurationImportSelector.class})AutoConfigurationImportSelector1234public String[] selectImports(AnnotationMetadata annotationMetadata) &#123; //..... return StringUtils.toStringArray(autoConfigurationEntry.getConfigurations());&#125;getConfigurations()","categories":[{"name":"java","slug":"java","permalink":"https://inkss.cn/categories/java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://inkss.cn/tags/Java/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://inkss.cn/tags/SpringBoot/"}]},{"title":"Java 报表模板 Excel 导出（二）","slug":"19-09/Java报表模板导出2","date":"2019-09-29T16:00:00.000Z","updated":"2019-09-30T06:43:12.941Z","comments":true,"path":"article/java/4cc75370.html","link":"","permalink":"https://inkss.cn/article/java/4cc75370.html","excerpt":"","text":"占位，未完待续","categories":[{"name":"java","slug":"java","permalink":"https://inkss.cn/categories/java/"}],"tags":[{"name":"excel","slug":"excel","permalink":"https://inkss.cn/tags/excel/"},{"name":"导出","slug":"导出","permalink":"https://inkss.cn/tags/导出/"}]},{"title":"个人用软件列表清单","slug":"19-09/软件列表清单","date":"2019-09-26T16:00:00.000Z","updated":"2019-09-27T07:35:45.486Z","comments":true,"path":"article/other/bdce2ea4.html","link":"","permalink":"https://inkss.cn/article/other/bdce2ea4.html","excerpt":"","text":"一、PC 软件 （1）编程类JDK 1.8GitKrakenTortoiseSVNSublime Text 3PowerDesigner 16.5Visual Studio CodeJetBrains ToolboxIntelliJ IDEA UltimateNavicat Preminum 12 （2）浏览器Google ChromeGoogle Chrome DeveloperFirefox Developer （3）办公类Xftp 6Xshell 6Xmind 8cosbrowserAdobe Acrobat DCMicrosoft Office 2016 （4）游戏类osu!SteamUplayEpic Games Launcher （5）效率类uToolsEverythingLogitech Options （5）工具类BandizipCapturaCcleanerPotPlayerClash for WindowsNVIDIA GeFore ExperienceVmware Workstation坚果云QQ 音乐QQ 拼音输入法 二、UWP 软件QQQQ 音乐QQ 桌面版OneNoteSnipasteMinecraftTranscoderDolby AudioTranslucentTBWiFi CommanderPhoto Editor ProLexis Audio EditorNVDIA Control PanelTeamViewer:Remote Control电视微信爱奇艺酷狗音乐腾讯视频腾讯微云喜马拉雅网易云音乐哔哩哔哩动画小米智能解锁 三、便携软件Dism++RightMenuMgr 四、Scoop7ziparia2darkgeekuninstallergitlessmsiopensshpythonscreentogifvnote","categories":[{"name":"other","slug":"other","permalink":"https://inkss.cn/categories/other/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://inkss.cn/tags/软件/"},{"name":"划水","slug":"划水","permalink":"https://inkss.cn/tags/划水/"}]},{"title":"Java 报表模板 Excel 导出（一）","slug":"19-09/Java报表模板导出","date":"2019-09-24T16:00:00.000Z","updated":"2019-09-25T02:38:17.076Z","comments":true,"path":"article/java/958bc658.html","link":"","permalink":"https://inkss.cn/article/java/958bc658.html","excerpt":"","text":"一、报表导出通过设计 Excel 模板，对一组报表数据进行导出，抽象出各类公共方法，快捷调用。 1.1 概述假设，突然有一天，你接到了一个任务，需要对数据库中的数据（报表）进行查询导出。首先我们知道，这个工作的工作量是不小的，但重复率却是很高的，为了最大程度的解放生产力，是必要制作一些模板，即使是粘贴、复制，也要按照最优雅的方式进行。那么我们先头脑风暴一下，分析导出报表需要做什么？ 1.1.1 前端用来显示的界面，我们需要一个展示查询数据的表格，一个用来输入查询条件的表单，一个用来导出查询内容的 Excel 。进一步的，查询时有着 各类验证 、查询的表单内容有着 各类样式 （如输入框、下拉框等）。除此之外，为了方便制作成模板，方便在前后端传值，表单的各列 id 和 name 最好是有规律的。为了在后期在 JS 中处理数据，方便调用，将表单值 序列化为对象。然后是列表显示，可能的便是二级表单或者动态表头，除此之外的功能借用 Layui 的数据表格显示；最后是导出，有查询条件存在和无查询条件存在时 导出内容的差异 等。总结一下前端，根据功能按照三个方向进行： 表单、表格、导出 。 1.1.2 后端后端从功能上概括则是接收前端传过来的查询数据，然后进行查询并返回结果给前端。按照经典的模型来分析：Controller Dao Mapper ，因为逻辑清晰，我们不需要中间多业务层。进一步分析，模板化方法的同时，我们还需要两个 pojo 对象，一个用来接收查询条件，一个用来接收查询结果（parameterType 和 resultMap）。接着是导出功能，根据逻辑，有查询条件时导出所有经过查询条件筛选后的结果，没有查询条件时导出所有结果，导出时不同表格有不同的样式、表头、标题，这里做成模板文件，在导出时根据模板文件填充数据。总结一下后端：查询、导出。 1.1.3 前后端交互同样，接着是前后端交互部分，以 Ajax 为基本，POST 或 Get 等方式完成查询、导出的流程。 1.2 流程基于以上的分析，我们制作出如下所示的思维导图： 二、下期预告在完成主体的内容分析之后，下期我们将从前端开始，根据要求一个个搭建我们所需要的功能。","categories":[{"name":"java","slug":"java","permalink":"https://inkss.cn/categories/java/"}],"tags":[{"name":"excel","slug":"excel","permalink":"https://inkss.cn/tags/excel/"},{"name":"导出","slug":"导出","permalink":"https://inkss.cn/tags/导出/"}]},{"title":"Hexo 博客部署 Valine 评论通知功能","slug":"19-09/评论通知功能","date":"2019-09-04T16:00:00.000Z","updated":"2019-09-14T15:03:27.939Z","comments":true,"path":"article/info/faca9026.html","link":"","permalink":"https://inkss.cn/article/info/faca9026.html","excerpt":"","text":"一、Hexo 博客 1️. 评论系统Hexo 作为一个静态博客，其本身是不具备动态评论能力的，一般是通过引用第三方插件，根据识别到的文章链接进行评论控制，这里可选的有：畅言、来必力、Disqus、Hypercomments、Gitment、Gitalk、Valine 等。大致的区别如下：畅言和来必力属于比较大的商业评论系统；Disqus 和 Hypercomments 在国外用的比较多，国内一般无法使用；Gitment 和 Gitalk 是基于 Github issue 的评论插件，需要拥有 Github 账户方可评论；Valine 是基于 Leancloud 的评论系统。 2. 个人选择对我本人来说，畅言和来必力不是很喜欢，Disqus 和 Hypercomments 国内无法访问也不用太多考虑，除非是为了做到筛选用户还差不多，所以也就剩下的三个了。但是依托于 Github 存在的评论插件需要 Github 账户，而且会占用一堆 issue ，不过这都是小问题，最主要的是安全问题，在 Github 登录时，请求的权限如下：This application will be able to read and write all public repository data . This includes the following:Code Issues Pull requests Wikis Settings Webhooks and services Deploy keys如你所见，这个权限申请的太大了，个人方便不是很喜欢，不是非常的相信陌生人。所以最佳选择就是 Valine 了，早些年 Valine 有一个优势是无需备案，不过在 Leancloud 调整策略后，是需要备案+实名制了（国际版无需备案实名）。对我来说，网站备案也没什么，主要是讨厌手持身份证拍照，好在 Leancloud 接入了支付宝的实名认证，倒也是好解决。 二、评论配置 1. Hexo 主题到此，就不得不涉及到主题部分了，事实上因为评论是一个公有的需求，大部分主题都内置了一个或多个评论系统，我们只需要在配置文件中手动选择即可。例如本站所使用的主题，内置了： 第三方评论框（友言、来必力、gitment、gitalk、Valine）在主题的配置文件中，可以对 Valine 的各种属性进行定制（更多内容可在其 官网 查看，这里不多赘述）：123456789valine: # Valine. https://valine.js.org appid: # your leancloud application appid appkey: # your leancloud application appkey notify: false # mail notifier verify: false # Verification code placeholder: just go go # Comment box placeholders avatar: retro # gravatar style meta: nick,mail,link # custom comment header pageSize: 10 # pagination size当然以上只是评论配置部分，这部分主题可以帮助你完成，最主要的后端配置是在 Leancloud 上进行，下文介绍了获取 appid 和 appkey 的方法，将这两串数值填写至配置文件中。至此，你的评论系统就出现啦，enjoy it~ 2. 获取 ID 和 Key请先 登录 或 注册 LeanCloud , 进入 控制台 后点击左下角 创建应用：应用创建好以后，进入刚刚创建的应用，选择左下角的 设置 &gt; 应用Key ，然后就能看到你的 APP ID 和 APP Key 了： 三、评论通知刚配好的新鲜出炉的 Valine 是没有邮件通知和评论管理能力的，这里我们进一步配置，此处只需要在上一步中创建的 Leancloud 应用里操作即可，主要操作对象为云引擎和域名绑定，域名主要用于执行定时唤醒任务和评论管理。 1. 快速部署进入 Leancloud 应用的 设置-域名绑定 界面，完成云引擎域名的域名绑定（建议使用二级域名）。进入 云引擎-设置 界面，填写 代码库 并保存：👉 https://github.com/DesertsP/Valine-Admin.git在 云引擎-设置 页面，填写指定的 环境变量 ，再次强调，请务必配置完成二级域名解析。变量示例说明SITE_NAME猫之三千岁[必填] 博客名称SITE_URLhttps://inkss.com[必填] 首页地址SMTP_SERVICE163[必填] 邮件服务提供商，详见：Supported servicesSMTP_USERszyink@163.com[必填] SMTP 登录用户SMTP_PASSxxxxxx[必填] SMTP登录密码SENDER_NAME猫猫说-评论通知[必填] 发件人SENDER_EMAILszyink@163.com[必填] 发件邮箱ADMIN_URLhttps://xxx.inkss.cn[必填] Web 主机 二级域名BLOGGER_EMAILszy@szyink.com[可选] 博主通知收件地址，默认使用 SENDER_EMAILAKISMET_KEYxxxxxxxxxxxx[可选] 垃圾评论检测在 云引擎-部署 页面，分支使用 master，点击部署即可,第一次部署需要花点时间。评论管理：访问设置的二级域名https://二级域名.xxxxx.cn/sign-up，注册管理员登录信息，之后登录后即可管理评论。注：使用原版 Valine 如果遇到注册页面不显示直接跳转至登录页的情况，请手动删除 _User 表中的全部数据。 2. 定时任务我们为所有应用提供免费的 体验实例，体验实例有 每天 6 小时的强制休眠时间 ，升级为标准实例即可免除限制。点击查看详情如你所见，免费应用有六小时强制休眠时间，我们需要定时任务控制这六个小时为 0-6 点做到最大程度的在线能力。新建定时任务：自动唤醒：函数 self_wake ，Cron 表达式 0 */20 7-23 * * ?邮件补发：函数 resend_mails ，Cron 表达式 30 0 8 * * ?以上内容的含义为：每天 7 点到 23:40 分，每隔 20 分钟执行一次自动唤醒任务；每天 8:0:30 执行邮件补发任务。","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://inkss.cn/tags/Hexo/"},{"name":"Valine","slug":"Valine","permalink":"https://inkss.cn/tags/Valine/"},{"name":"评论","slug":"评论","permalink":"https://inkss.cn/tags/评论/"}]},{"title":"猫之三千岁：网站状态概述","slug":"19-07/网站状态概述","date":"2019-07-21T16:00:00.000Z","updated":"2019-09-10T08:22:02.375Z","comments":true,"path":"article/other/b0e91f3f.html","link":"","permalink":"https://inkss.cn/article/other/b0e91f3f.html","excerpt":"","text":"一、起始万物皆有起源，本站的起始则是从 2018年11月 开始。谈及最初建个人网站的经历，大概在大一下的时候就开始了，不过当时选择的并不是 Hexo ，而是使用了很著名的一个博客系统：WordPress 。它简直是新手入门的不二之选呀，从购买服务器，到搭建服务器运行环境，再到购买域名，各类网站解析什么的，一种套流程下来，虽然各种懵逼，但是重在折腾呀。再后来，对 WordPress 的乐趣转向它的插件、主题上，各种主题、插件的尝试更换等等，现在想来有些本末倒置了。最后，因为没有对服务器/域名进行续费，第一个网站就荒废了。留念一下：域名 ：sunziy.cn ，站名 ：不停 。后来的很长一段时间内，没有再接触过网站了，期间有对 Hexo 了解过一阵子，但也只是仅限了解，没有细致的尝试。就这样一直到了大三下，在制作简历的时候，认为网站会是一个加分项，边着手重新搭建一个。因为追求轻量化，那么作为静态博客的 Hexo 便是首选了。维基百科中有言，古埃及人早在 3600 年前，便有驯养猫的历史，故曰猫之三千六百岁。 二、轻量简约静态博客无需 WEB 服务器做处理，这样整个网站的开支降到一个极为节俭的程度。简单的罗列下本网站的开支吧：域名：cn 域名 35/年。存储：Github 免费；腾讯云对象存储 0.13/G。访问：Github 免费；腾讯云对象存储 0.5/G。分发：腾讯云对象存储 CDN 0.15/G。事实上，对于一个小站，除了域名开支，很少会用到付费部分。毕竟，网站的真正的开支大头是云服务器呀。 三、环境Hexo 是需要 Node.js 环境的，而且个人对网站主题文件也做了一些修改，甚至部分插件也有改动，使用 npm install --save 安装插件的话，很是影响网站结构。所以，后来，干脆在 Github 建立一个私有仓库，将整个 Hexo 目录连带着插件文件一并打包上传。这样子起码解决了网站内容的问题，但是 Hexo 所需环境还是个麻烦，Linux 还好，Windows 下无论是搭建还是终端下命令的使用都很难受，但是山重水复疑无路，柳暗花明又一村。我发现了腾讯云开发者平台，这个平台在很早之前就存档，当时远远没有现在的易用性，多个版本的迭代后，Cloud Studio 使用体验上是非常的优秀，如你所见，整个编辑界面，应该是改自 Visual Studio Code 。最后提及一句，它相当于为你提供了一个免费的 Linux 服务器，做一些编辑之类的真的是很赞呀，可以让你随时随地修并提交网站内容。 占位，待补呢说点什么呢，ed.","categories":[{"name":"other","slug":"other","permalink":"https://inkss.cn/categories/other/"}],"tags":[{"name":"网站","slug":"网站","permalink":"https://inkss.cn/tags/网站/"},{"name":"Hexo","slug":"Hexo","permalink":"https://inkss.cn/tags/Hexo/"},{"name":"Cloud Studio","slug":"Cloud-Studio","permalink":"https://inkss.cn/tags/Cloud-Studio/"}]},{"title":"个性化提交：Git Emoji 指南","slug":"19-07/git_emoji","date":"2019-07-18T16:00:00.000Z","updated":"2019-09-10T08:21:58.147Z","comments":true,"path":"article/git/d0be228a.html","link":"","permalink":"https://inkss.cn/article/git/d0be228a.html","excerpt":"","text":"emojiemoji代码commit 说明🎨 (调色板):art:改进代码结构/代码格式⚡️ (闪电)🐎 (赛马):zap:“:racehorse:提升性能🔥 (火焰):fire:移除代码或文件🐛 (bug):bug:修复 bug🚑 (急救车):ambulance:重要补丁✨ (火花):sparkles:引入新功能📝 (备忘录):memo:撰写文档🚀 (火箭):rocket:部署功能💄 (口红):lipstick:更新 UI 和样式文件🎉 (庆祝):tada:初次提交✅ (白色复选框):white_check_mark:增加测试🔒 (锁):lock:修复安全问题🍎 (苹果):apple:修复 macOS 下的问题🐧 (企鹅):penguin:修复 Linux 下的问题🏁 (旗帜):checked_flag:修复 Windows 下的问题🔖 (书签):bookmark:发行/版本标签🚨 (警车灯):rotating_light:移除 linter 警告🚧 (施工):construction:工作进行中💚 (绿心):green_heart:修复 CI 构建问题⬇️ (下降箭头):arrow_down:降级依赖⬆️ (上升箭头):arrow_up:升级依赖👷 (工人):construction_worker:添加 CI 构建系统📈 (上升趋势图):chart_with_upwards_trend:添加分析或跟踪代码🔨 (锤子):hammer:重大重构➖ (减号):heavy_minus_sign:减少一个依赖🐳 (鲸鱼):whale:Docker 相关工作➕ (加号):heavy_plug_sign:增加一个依赖🔧 (扳手):wrench:修改配置文件🌐 (地球):globe_with_meridians:国际化与本地化✏️ (铅笔):pencil2:修复 typo参考资料 :https://gitmoji.carloscuesta.me/","categories":[{"name":"git","slug":"git","permalink":"https://inkss.cn/categories/git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://inkss.cn/tags/Git/"},{"name":"emoji","slug":"emoji","permalink":"https://inkss.cn/tags/emoji/"}]},{"title":"Ubuntu 下联想 Y7KP 显卡和网卡驱动配置","slug":"19-04/Ubuntu 18.04 下联想 Y7000P 显卡和网卡驱动配置","date":"2019-04-01T16:00:00.000Z","updated":"2019-09-14T15:05:09.023Z","comments":true,"path":"article/linux/9a96536e.html","link":"","permalink":"https://inkss.cn/article/linux/9a96536e.html","excerpt":"","text":"前言：最近换了个笔记本：联想 Y7000P i5-8300H GTX1060 。驱动上出了些问题，故录此文章，仅供参考。 一、显卡驱动在换这个笔记本之前，上一个笔记本的显卡为 AMD ，倒也没使用过英伟达显卡，曾经看着过很多人吐槽显卡驱动，给我一种它很难装的感觉。但是在本次的使用中，显卡驱动只需要轻轻切换成私有显卡就好了，或许是新版 Ubuntu 做好了适配，这倒是个好事。如上图，在 软件和更新 的 附加驱动 中勾选使用专用驱动就 OK 了。 二、网卡驱动相比于显卡驱动，网卡驱动倒是头疼了很久。在安装 Ubuntu 系统时使用的是有线连接，完全没注意到无线连接会出现问题，后来发现这个问题时一度担心操作系统没有该网卡驱动，幸好是有的，可以解决。在最开始，操作系统甚至 无法识别出无线模块，提示没有适配器 ，这里的操作是从官网下载驱动进行安装。Y7000P 的网卡型号是：Intel® Wireless-AC 9560在官网下载 Linux 版本的驱动：Linux * Support for Intel 。下载驱动解压后，按照要求将驱动文件复制到 lib/firmware 目录，然后重启电脑，就能出现适配器了。但此时还无法使用，大致的解释是笔记本带的驱动和 Ubuntu 系统中的驱动冲突，我们需要禁用一个。修改文件：1sudo gedit /etc/modprobe.d/blacklist-firewire.conf在最后追加一行：1blacklist ideapad_laptop然后重启电脑就好了，最后说一下我在查阅资料时大部分人似乎一开始就有 wifi 适配器，只需要修改文件就行，我这儿连 wifi 模块都没有，这里需要合理判断咯。测试性提交，本次修改内容由 Cloud Studio 发出。","categories":[{"name":"linux","slug":"linux","permalink":"https://inkss.cn/categories/linux/"}],"tags":[{"name":"联想Y7000P","slug":"联想Y7000P","permalink":"https://inkss.cn/tags/联想Y7000P/"},{"name":"网卡驱动","slug":"网卡驱动","permalink":"https://inkss.cn/tags/网卡驱动/"},{"name":"显卡驱动","slug":"显卡驱动","permalink":"https://inkss.cn/tags/显卡驱动/"}]},{"title":"Ubuntu 18.04 安装笔记","slug":"19-03/Ubuntu18.04安装记录","date":"2019-03-14T16:00:00.000Z","updated":"2019-09-10T08:21:43.795Z","comments":true,"path":"article/linux/c6df61d3.html","link":"","permalink":"https://inkss.cn/article/linux/c6df61d3.html","excerpt":"","text":"概述：Ubuntu 18.04 的安装配置笔记， 💕。简介：基础使用环境的搭建，暂定目标为一篇文章解决大部分疑问。协议：本文章使用 CC BY-NC-SA 4.0 协议（转载署名）。本文地址：Ubuntu 安装记录 。文章更新日志：12345672019.04.28 - 重构文章，修改并调整内容。 - 补充来源链接，方便时效性内容的验证。2019.07.29 - 更正 Shell 的安装命令。 - 解决下载速度慢的小工具。 - 删除所有配图。 一、安装操作系统 1.1 引导盘刻录进光盘：使用 UltraISO 对镜像文件进行刻录，同时存在 Legacy , UEFI 两种引导项，需通过 UEFI 形式读入光盘。刻录进 U 盘：方案一：解压镜像文件 【推荐】将 U 盘格式化为 FAT32 ，然后解压操作系统的镜像文件至 U 盘根目录，完成 “刻录” 。方案二：使用刻录工具利用软件 Rufus 完成镜像刻录。刻录 Windows PE 系统，如“微 PE”可以选择三分区，也就是引导一个分区，PE 一个分区，U 盘剩余空间一个分区；而如果利用方案一的解压方式，那么 U 盘将被识别出两个引导，Windows &amp; Linux 。 1.2 分区分区，也就是提前为 Ubuntu 系统划分空间，这一步可以在 Windows 下进行，也可以在安装操作系统时进行。Linux 系统的分区只建议划分根 / 和家目录 /home ，如此系统文件与个人文件分离，最大程度的保留数据。交换分区：建议使用 swap 文件代替 swap 分区，削减多余的分区。 1.3 安装系统一些注意事项：硬盘格式：GPT ；引导类型：UEFI 。单系统用户，务必准备一个 EFI (ESP) 分区，否则无法写入 Grub 引导。安装过程中建议勾选 最小安装 、 安装 Ubuntu 时下载更新 和 为图形或无线硬件安装第三方软件 。关于下载速度的问题：如无合适的解决方案，可安装系统换源后再进行下载操作。 二、开箱即用的操作系统遗憾的是，Ubuntu 的开箱体验并不优秀，不过好在配置过程也不复杂，完成 2.1 和 2.3 便差不多可用了 。本节按照线性顺序进行，虽然实际安装过程中，限于网速多半会先安装 Chrome 和 Clash （相关内容位于第三节）。此外操作系统中自带的火狐浏览器为国际版，而非国内谋智代理的火狐，两者账户不互通。 2.1 第一次重启前 2.1.1 完成第一次更新先移步到 所有软件 (Win + A)→软件更新器 ，等待系统完成更新。（其实等待一会儿会自动弹出的）接着移步到 所有软件→设置→区域和语言→管理已安装的语言 ，完成语言列表的更新。 2.2.2 转移备份文件在选择重启操作系统前，拷贝文件到新系统中（如果存在的话）。 2.2.3 解决双系统时差问题Windows + Linux 需求用户可以使用以下代码在终端中执行解决此问题。1timedatectl set-local-rtc 1 --adjust-system-clock 2.2.4 替换 Shell不得不说，有一个智能的补全能力强大的终端还是非常有必要的，二选一。(a). oh-my-zsh1234sudo apt install gitsudo apt install zshsh -c \"$(wget -O- https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"chsh -s /usr/bin/zsh(b). fish1234sudo apt-add-repository ppa:fish-shell/release-3sudo apt-get updatesudo apt-get install fishchsh -s /usr/bin/fish12set fish_greeting fish_config 2.2.5 终端下的包安装器相比于图形界面 ，在终端下安装 deb 包可以获得更多的信息提示，但是使用 dpkg 命令又无法自动解决依赖问题，这里可以使用 gdebi 安装器解决此问题。1sudo apt install gdebi 2.2 换一套主题此节是为伸手党准备的，详细的内容可参见 2.3 主题自定义 （新手可以不必去看）。可以通过本节内容快速完成主题方面的修改，注：gnome-shell-extensions 是一些常用扩展的集合，如 User Themes 等（事实上它可以在应用商店里搜索安装）。 2.2.1 系统主题 Sieera1234sudo add-apt-repository ppa:dyatlov-igor/sierra-themesudo apt updatesudo apt install sierra-gtk-theme # point releasessudo apt install sierra-gtk-theme-git # git master branch相关链接：vinceliuice/Sierra-gtk-theme 2.2.2 应用图标 suru-plus1wget -qO- https://raw.githubusercontent.com/gusbemacbe/suru-plus/master/install.sh | env DESTDIR=&quot;$HOME/.icons&quot; sh相关链接：gusbemacbe/suru-plus 2.2.3 Grub 引导主题 Fallout1wget -O - https://github.com/shvchk/fallout-grub-theme/raw/master/install.sh | bash相关链接：shvchk/fallout-grub-theme 2.2.4 鼠标光标 oxy-blue下载 oxy-blue.zip，解压文件到：~/.icons 。 2.2.5 文泉驿字体文泉驿字体 微米黑/正黑：1sudo apt install fonts-wqy-microhei fonts-wqy-zenhei终端字体 powerline ：1sudo apt-get install fonts-powerline 2.2.6 优化工具12sudo apt install gnome-tweak-toolsudo apt install gnome-shell-extensions然后，从应用列表中打开一个名为 优化 的软件，在扩展中启用 “ User Themes ”；在外观中修改：应用程序、光标、图标和 Shell 就大功告成了，最后不要忘记换一个赏心悦目的桌面背景。 2.2.7 输入法和 Dock参阅 2.3 部分的相关内容。 2.3 主题自定义主题自定义中共包含 6 个部分，涉及 2.2 中各项具体的解释。 2.3.1 Gnome-tweak-tool1sudo apt install gnome-tweak-tool移步到 所有软件→Ubuntu 软件→附加组件 ，在此处安装相应的 Shell 组件（或者参考 3.2 节）。为了自定义 Shell 主题（加载本地文件），需要安装、启用插件：User Themes 。 2.3.2 主题 图标 字体安装目录有两种，区别上类似于 Windows 环境变量里的个人和系统。主题存放目录：/usr/share/themes 或 ~/.themes图标存放目录：/usr/share/icons 或 ~/.icons字体存放目录：/usr/share/fonts 或 ~/.fonts其中 /usr/share 目录需要 root 权限才能修改，可以对文件管理提权后打开：1sudo nautilus 2.3.3 Grub 启动项主题主题包地址：Gnome Look - GRUB Themes （自行挑选喜欢的）(a) 手写配置文件安装步骤 ：首先下载主题包，多为压缩包，解压出文件。使用 sudo nautilus 打开文件管理器。定位到目录：/boot/grub，在该目录下 新建文件夹 ：themes，将解压出的文件拷贝到文件夹中。接着（终端下）使用 gedit 修改 grub 文件：1sudo gedit /etc/default/grub在该文件末尾添加：12# GRUB_THEME=\"/boot/grub/themes/主题包文件夹名称/theme.txt\"GRUB_THEME=\"/boot/grub/themes/fallout-grub-theme-master/theme.txt\"更新配置文件：1sudo update-grub(b) 利用软件 Grub Customizer 【推荐】12sudo add-apt-repository ppa:danielrichter2007/grub-customizersudo apt install grub-customizer可使用该软件定制 Grub ，如修改启动项名称，默认启动改为上一次启动项 。相关链接：Launchpad PPA for Grub Customizer 2.3.4 GDM 登录背景图更换登录界面的背景图需要修改 ubuntu.css，它位于 /usr/share/gnome-shell/theme 。1sudo gedit /usr/share/gnome-shell/theme/ubuntu.css在文件中找到关键字 lockDialogGroup，如下行：123#lockDialogGroup &#123; background: #2c001e url(resource:///org/gnome/shell/theme/noise-texture.png); background-repeat: repeat; &#125;修改图片路径即可，样例如下：12345#lockDialogGroup &#123;background: #2c001e url(file:///home/inkss/APP/ink_img/img.jpg); background-repeat: no-repeat; background-size: cover; background-position: center; &#125; 2.3.5 输入法 中州韵和搜狗首先，默认状态下 Ubuntu 的中文输入法属于可用但不完全好用的状态，这里记录两类输入法，二选一。(a) 中州韵输入法前置提醒：中州韵没有 GUI 界面，只能通过配置文件进行定制，需要一定的研究能力。基于 IBus 框架的中州韵（默认为此框架）：1sudo apt-get install ibus-rime相关链接：ibus-rime(b) 搜狗输入法搜狗基于 Fcitx 输入框架，默认没有安装，需要先安装框架：1sudo apt install fcitx去 搜狗输入法官网 下载输入法安装包安装：1sudo gdebi xxxxxx.deb然后移步到 设置→区域和语言 ，删除一部分输入源，只保留汉语，接着选择 管理已安装的语言 ，修改 键盘输入法系统 为 fcitx 。关闭窗口，打开所有程序，选择软件 Fcitx 配置 ，选择加号添加搜狗输入法。如果没有找到搜狗，就重启系统，再次重复以上步骤即可。（多半找不到，呱）推荐一个搜狗输入法皮肤：简约-信 。PS：两个输入法可以共存。 2.3.6 Dock - Docky一个第三方 Dock 软件，颜值上比 Ubuntu 自带 Dock 好了些许。1sudo apt install docky【可选】如何 去掉 Docky 第一个图标在 Ubuntu SoftWare 中搜索 Configuration Editor ，安装后打开软件，定位到：/apps/docky-2/Docky/Items/DockyItem取消 ShowDockyItem 的勾选状态（决定是否显示 第一个 Docky） 三、后续完善此节内容可跳跃观看，仅供参考，合理辨认内容是否过时。 3.1 DeepinWine Wine QQ首先需要在本机下载 Deepin-Wine 环境：deepin-wine-ubuntu克隆或下载压缩包到本机，解压后 在终端目录下执行命令：./install.sh 安装环境。容器下载地址：Index of /deepin/pool/non-free/d/ ，使用方法见仓库中的 ReadMe 文件。关于托盘：安装 TopIconPlus 的 gnome-shell 扩展。然后在所有软件中找到 优化 (Gnome-tweak-tool) ，在扩展中打开 Topicons plus 。 3.2 Gnome 扩展获取扩展的方法很多：终端命令，软件中心下载，浏览器下载等，这里主要介绍浏览器下载。首先安装 Gnome Shell ：1sudo apt install chrome-gnome-shell然后安装浏览器插件（谷歌浏览器）：Chrome 网上应用商店 。无条件的同学可以使用火狐浏览器安装扩展：GNOME Shell integration 。浏览器插件安装完成后点击 插件图标 就能进入：Shell 扩展商店 。Gnome 扩展推荐（点击链接进入，按需使用） :扩展简要功能描述Appfolders Management extension【荐】添加文件夹Applications Menu在顶部添加一个应用程序入口Autohide Battery【荐】自动隐藏电源（充电状态下已满）Caffeine取消自动锁屏（应用前台允许下）Clipboard Indicator剪切板管理工具Coverflow Alt-Tab【荐】Alt Tab 切换应用（更酷炫的界面）Dash to Dock【荐】Dock （大名鼎鼎）Dash to Panel【荐】对顶栏的操作处理（诸如自动隐藏等）EasyScreenCast录屏工具（录制质量优秀）Extension update notifier【荐】自动推送所有扩展的更新信息Keys Indicator【荐】顶栏显示 shift,alt,ctrl,num,cap 状态Never close calendar event从不清除日历事件OpenWeather【荐】顶栏显示天气情况（支持中文）Places Status Indicator【荐】提供快捷目录入口（同文件管理器）Popup dict Switcher一键开关划词翻译 &gt;&gt;&gt; 参考下文&lt;&lt;&lt;Removable Drive Menu【荐】移除可移动设备Screenshot Tool【荐】截图工具（挺方便）Sound Input &amp; Output Device Chooser更方便的调整声音、亮度System-monitor在状态栏中显示系统信息（需要解决依赖）TaskBar类似于 Windows 任务栏的显示效果Time ++番茄钟（闹钟、秒表、计时器）TopIcons Plus【荐】顶栏显示应用图标（托盘显示）User Themes【荐】允许本地安装使用 Shell 主题以上表格提到的所有扩展都能在 Ubuntu 18.04 中使用，若出现安装失败，请检查 是否满足相关依赖 。 3.3 文件备份合集 3.3.1本地同步备份FreeFileSync 是一款本地同步 备份 软件：如将本地硬盘上的文件同步到移动硬盘上。可以做到增量备份、自动识别差异项等。同步方式有：双向、镜像、更新 。下载地址：Download FreeFileSync ，解压后直接点击 FreeFileSync 文件就能使用。因为没有图标，这里给出写入图标的方式（有工具就绝对不手写）：12# –-no-install-recommends 参数避免安装非必须的文件，从而减小体积sudo apt install --no-install-recommends gnome-panel创建应用程序启动方式1sudo gnome-desktop-item-edit /usr/share/applications/ --create-new命令：点浏览展开到解压目录，选择 FreeFileSync 的可执行文件。图标：解压包中有一个名为 Resources.zip 的压缩包，含有一些图片，从中选取软件图标。 3.3.2 云端同步备份坚果云 是一款云端 同步 软件，与同类的 OneDrive 相比，坚果云做到了全平台兼容。其免费版本流量限制、空间不限（下载 3G/月，上传 1G/月）；专业版一年 42G 空间、不限流量，199.90 元（差不多是处于打折状态下 Office 365 的价格，有 1T OneDrive 空间）。下载地址：坚果云 Linux 版 （普通的 deb 安装包） 3.3.3 局域网文件互传Chfs 是一个免费的、HTTP 协议的文件共享服务器，使用浏览器可以快速访问。它具有以下特点：单个文件，整个软件只有一个可执行程序，无配置文件等其他文件跨平台运行，支持主流平台：Windows，Linux 和 Mac支持扫码下载和手机端访问，手机与电脑之间共享文件非常方便支持账户权限控制和地址过滤下载地址：CuteHttpFileServer ，使用方案见网站说明。 3.3.4 在线文件管理器基于 Caddy 的 FileBrowser 模块，除此之外还可以使用 webdav 模块启用 webdav 功能。安装 Caddy1curl https://getcaddy.com | bash -s personal http.filebrowser新建配置文件 Caddyfile ，文件位置 /home/ubuntu/caddy/Caddyfile1234567:8080 &#123; gzip timeouts none filebrowser / / &#123; database /home/ubuntu/caddy/filebrowser.db &#125;&#125;以上写法的作用是通过 IP 的 8080 端口访问网页，这个 IP 既可以是公网 IP 也可以是内网 IP 。具体的文件路径可以在登录网页后在网站设置内手动修改，数据库的存放目录要灵活自己选择，配置文件的存放目录同样可以自拟。在 /home/ubuntu/caddy/ 目录下打开终端，执行命令：caddy ，终端提示错误忽略即可。打开网址：http://localhost:8080 访问，默认的用户名和密码均为：admin （可以手写一个脚本自动运行）。更多的内容可以参看这篇实验：基于 Caddy 搭建基于网页的文件共享管理系统 。相关文档：FileBrowser # caddy 。 3.3.5 系统快照备份制作快照的软件 TimeShift ，可以对整个分区进行备份，以分区为单位进行恢复。这里安装它即可：1sudo apt install timeshift相关链接：teejee2008/timeshift 3.4 网易云音乐以下内容对应网易云音乐 1.1.0 版本。首先去网易云音乐官网 下载安装包（Ubuntu 16.04 64 位），然后就是正常的 deb 包安装过程。安装完毕后，会发现在应用列表中 点击应用图标无法启动软件 ，解决方案：修改网易云音乐的启动图标1sudo gedit /usr/share/applications/netease-cloud-music.desktop修改 Exec 这一行内容1Exec=sh -c \"unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U\"附录：网易云音乐配置及缓存目录12~/.config/netease-cloud-music~/.cache/netease-cloud-music参考资料地址：Ubuntu 18.04 装了网易云音乐，难道只能用 sudo 启动吗？- @Fancy 解答 3.5 Clash地址：Dreamacro/clash A rule-based tunnel in Go.HTTP/HTTPS and SOCKS protocolSurge like configurationGeoIP rule supportSupport Vmess/Shadowsocks/Socks5Support for Netfilter TCP redirect大部分 PC 下载 clash-linux-amd64.tar.gz 即可。利用 Clash Dashboard 切换，管理。写个小脚本解决自启动。 3.6 Chrome1234wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - sudo sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" &gt;&gt; /etc/apt/sources.list.d/google.list'sudo apt updatesudo apt install google-chrome-stable相关链接：Google Linux Software Repositories , UbuntuUpdates 。 3.7 Typora1234wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add -sudo add-apt-repository 'deb https://typora.io/linux ./'sudo apt updatesudo apt install typora相关链接：Typora for Linux 3.8 Albert12345sudo apt install curlcurl https://build.opensuse.org/projects/home:manuelschneid3r/public_key | sudo apt-key add -sudo sh -c \"echo 'deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_18.04/ /' &gt; /etc/apt/sources.list.d/home:manuelschneid3r.list\"sudo apt-get updatesudo apt-get install albert相关链接：Albert , OpenSUSE 3.9 popup-dictLinux 下的划词翻译工具，支持使用有道等多种翻译服务。安装过程：安装 pip3 ，如果已有请忽略此步骤1sudo apt install python3-pip安装 PyGObject 依赖1sudo apt install python-gi python-gi-cairo python3-gi python3-gi-cairo gir1.2-gtk-3.0安装 popup-dict1sudo pip3 install popupdict运行软件：使用 Gnome 扩展 Popup dict Switcher相关链接：bianjp/popup-dict 四、编程程序 4.1 Hexo | Node.js三连击预备，Hexo 是一套静态博客系统。如果没有终端代理下载速度可能会绝望的。安装 NVM ：wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh安装 Node：nvm install stable安装 Hexo：npm install -g hexo-cli 4.2 Git 配置生成 key ：ssh-keygen -t rsa -C &quot;youremail@example.com&quot;配置用户名：git config --global user.name &quot;Your Name&quot;配置邮箱：git config --global user.email &quot;email@example.com&quot;测试 Github 联通：ssh -T git@github.com将公钥提取出来命名为：authorized_keys 扔到服务器的 ~/.ssh 目录就可以免密登录访问远程主机：ssh 用户名@域名/IP 4.3 MySQL 8.X在不做处理的情况下，命令行安装 MySQL 版本为 5.7 ，而它只适配到 Ubuntu 17.04 。先下载 APT 存储库，地址：MySQL APT Repository 。然后运行它，默认即为 MySQL 8.0 ，移动光标到 OK 确认即可。接着就可以在终端下正常安装 MySQL 了：12sudo apt updatesudo apt install mysql-server附录：执行安全脚本1sudo mysql_secure_installation附录：安装 WorkBench1sudo apt install mysql-workbench-community相关链接：如何在Ubuntu 18.04中安装MySQL 8.0 五、补充内容 5.1 软件列表音乐软件：网易云音乐、Spotify、Audacious聊天软件：TIM、微信、Telegram办公软件：WPS、Foxit Reader、 Kile、坚果云、XMind、百度脑图离线版图形软件：Converseen（图片格式转换）、Krita（类似 PS）、polarr （泼辣修图）下载软件：aMule（电驴）、Deluge（种子）、qBittorrent（种子）、uGet（有点类似 IDM）截图录屏：深度截图、深度取色器、Shutter、SimpleScreen版本管理：GitKraken、Meld浏览器：Chrome、Firefox软件启动器：Albert应用商店：App Grid剪切板管理：Cliplt网络代理：electron-ssr虚拟键盘：Florence密码管理：KeePassXC音频剪辑：Audacity 5.2 代码篇 5.2.1 软件图标文件位置/usr/share/applications # 大部分启动图标都在此~/.local/share/applications # 一部分本地图标/var/lib/snapd/desktop/applications # snap 类软件在此对于 *.desktop 文件，可以使用文本编辑器对图标或名称之类的进行修改。 5.2.2 代码篇12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758# 查看所有 shell 以及如何切换cat /etc/shellschsh -s /xxx/xxxx# 强制清空回收站sudo rm -rf $HOME/.local/share/Trash/files/*# 系统环境变量位置/etc/profile# 环境变量值 PATH 的一种写法export PATH=$PATH:变量1:变量2:变量3# 个人终端下的环境变量~/.bashrc~/.zshrc# MySQL 的 root 账户密码sudo mysql -u root # 使用管理员权限进数据库DROP USER 'root'@'localhost'; # 删除原数据库中 root 账户CREATE USER 'root'@'%' IDENTIFIED BY 'passwd'; # 新建并指定密码GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'; # 赋权FLUSH PRIVILEGES; # 更新# 多版本切换（ java 等）sudo update-alternatives --install &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt;sudo update-alternatives --remove &lt;name&gt; &lt;path&gt;sudo update-alternatives --config &lt;name&gt;# Java 环境变量的写法# 假设 JDK 的解压目录为 /usr/lib/jvm/jdk# 需要修改文件 /etc/profilesudo gedit /etc/profile# 打开文本编辑器后，在最下面添加：export JAVA_HOME=/usr/lib/jvm/jdkexport JRE_HOME=$&#123;JAVA_HOME&#125;/jreexport CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:&#123;JRE_HOME&#125;/libexport PATH=$PATH:&#123;JAVA_HOME&#125;/bin:# 然后保存退出 刷新source /etc/profile# 添加连接sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk/bin/java 300sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk/bin/javac 300sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk/bin/jar 300# Python Anaconda env 配置conda create -n your_env_name python=3.7 # 创键环境conda activate your_env_name # 激活环境# MariaDB# 使用自定义源 TUNAsudo apt-get install software-properties-commonsudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://mirrors.tuna.tsinghua.edu.cn/mariadb/repo/10.3/ubuntu bionic main'sudo apt updatesudo apt install mariadb-server# 配置sudo mysql_secure_installation 5.2.3 踩坑记录VMware : 虚拟机安装的前置依赖为：make gcc 。JetBrains toolbox ：使用 toolbox 安装软件比 snap 好太多（速度感人），它也能自动更新 IDE 。但是它会疯狂修改 .desktop 文件，强迫症表示必须要修改图标的样式和主题一致，把图标文件权限设置为只读就能解决。Minecraft 所需要的 JDK 只需要提前安装一个 openjdk-8-jre 。Life is Strange 奇异人生所需要的 Linux 版汉化：百度网盘 。XMind : 无启动图标，需要手动添加应用图标，有一个小麻烦是桌面图标文件所在的目录必须和启动软件同目录。此外 XMind 8 版本存在可用的破解激活方案。依赖 JDK8。善用 TimeShift ，它提供了一个回滚系统的机会。","categories":[{"name":"linux","slug":"linux","permalink":"https://inkss.cn/categories/linux/"}],"tags":[{"name":"Ubuntu 18.04","slug":"Ubuntu-18-04","permalink":"https://inkss.cn/tags/Ubuntu-18-04/"}]},{"title":"Office 365 免费订阅申请","slug":"18-09/Office-365-免费订阅申请","date":"2018-09-29T13:26:26.000Z","updated":"2019-09-25T03:02:05.620Z","comments":true,"path":"article/info/82e6dcea.html","link":"","permalink":"https://inkss.cn/article/info/82e6dcea.html","excerpt":"","text":"Office 365 开发人员计划 ：通过这个计划可以免费申请到一年 Office 365 企业版 E3（开发人员） 订阅。 1.Office 365 开发人员计划➡️ 相关链接：Office 365 开发者计划申请过程这里不多阐述了，登录微软账户后按照提示操作即可，最终能够获得：总共有 25 个账户，24 个可分配用户，每一个用户等同一个 Office 365 家庭版订阅。 2.设置 Office 域在 Microsoft 365 admin center 界面，有一个被称作 域 的功能：默认的域名为：username.onmicrosoft.com ，用户默认登录名则是：xxxx.username.onmicrosoft.com 。本质上只是一个三级域名，长且繁琐，所以最好使用自己的域名。鉴于成本原因（外加不需要备案），此处推荐从 Freenom 处申请。➡️ 相关链接：Freenom可以在这个网站上 以免费的价格申请到最长一年 的域名（在域名到期前会发邮件通知）。拿到域名后，回到 Office 设置，添加域信息即可（其中一步需要更改域名的 DNS 解析）。在 Office 域中显示如下： 3.免费域名虽然 Freenom 提供了免费域名申请，但是其用户协议里也要求域名必须能够正常使用（也就是通过域名必须能够访问成功），否则域名就会被收回。这里的处理措施是用 Github Page 规避：https://github.com/July7183/july7183.github.iohttps://www.inkss.cf通过s开发者认证可以申请到一年 25 账户 的 Office 365 E3 订阅。Office 365 提供了一个域功能，允许用户使用自有域名设置账户信息。Freenom 提供免费域名的申请，但是域名必须能够正常访问，否则域名就会被收回。本域名并未备案，因为域的原因使用了微软 DNS 解析，不确保中国境内的正常访问。微软的 DNS 竟然不能直接解析主域名 @ 。更多信息参阅：https://inkss.cn/2018/09/29/free-office-365/回到顶部 © Inkss","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"Office","slug":"Office","permalink":"https://inkss.cn/tags/Office/"}]},{"title":"浅谈泛域名：解析、证书、分发","slug":"18-09/浅谈网站泛域名","date":"2018-09-25T05:48:49.000Z","updated":"2019-09-25T03:02:16.100Z","comments":true,"path":"article/other/8967398c.html","link":"","permalink":"https://inkss.cn/article/other/8967398c.html","excerpt":"","text":"概述：本文主要介绍这些内容： DNS 泛域名解析、SSL 泛域名证书申请、CDN 泛域名加速（分发）。前置：本文中 DNS 服务商为 DNSPod ，SSL 证书由 Let’s Encrypt 颁发，CDN 则是使用 腾讯云 CDN 。环境：基础的操作环境：主机: CentOS 7.4 、服务器: Nginx 、其他：acme.sh 。附录：介绍 CentOS 的 Nginx 安装和配置。 一、DNS 域名解析谈及 DNS 解析，一般有这几点要素：主机记录、记录类型、线路类型、记录值、TTL 。主机记录（@, *,xxx） 假设根域名： domain.com主机记录解释解析后网址@直接对主域名解析domain.com*泛域名解析，匹配所有二级域名*.domain.comwww对二级域名为 www 的网址解析www.domain.comxxx对二级域名为 xxx 的网址解析xxx.domain.com记录类型 （A,CNAME,TXT,NS,显性 URL ,隐性 URL）A 记录：解析到具体的 服务器 IP 地址 ；CNAME ：解析到另一域名（比如 CDN 的加速域名），通过另一域名获取服务器 IP 地址 。显性 URL 则是使用 301 跳转 重定向 域名，而 隐性URL 本质上只是一个 嵌套 iframe （一个是 DNS 服务器做重定向，一个是 DNS 服务器套一个网页）。NS 则是用来换 DNS 服务商时使用。 二、SSL 泛域名证书申请支持 免费 泛域名证书申请的只有 Let’s Encrypt 了。有兴趣可以去其官网看看，每次申请可以获取三个月证书时间，所以此处借助工具：acme.sh安装方法也非常简单，见其中文帮助文档：acme.sh-说明 ，在本文中简单的记录一下： （1）安装 acme.sh12curl https://get.acme.sh | shalias acme.sh=~/.acme.sh/acme.sh （2）生成证书：DNS 方式需要先登录 dnspod 获取 API 的 ID 和 Key 。123export DP_Id=\"1234\"export DP_Key=\"sADDsdasdgdsf\"acme.sh --issue --dns dns_dp -d domain.com -d *.domain.com （3）安装证书1234acme.sh --installcert -d domain.com \\ --key-file /etc/pki/nginx/domain.key \\ --fullchain-file /etc/pki/nginx/fullchain.cer \\ --reloadcmd \"service nginx force-reload\" （4）更新证书目前证书在 60 天以后会自动更新, 你无需任何操作。 （5）自动更新 acme.sh1acme.sh --upgrade --auto-upgrade 三、CDN 泛域名分发这里使用的是腾讯云的 CDN （阿里云也是可以的），前置条件：备案 + 验证 。除了需要验证外，其余的添加方法与普通 CDN 域名加速的设置项均相同。但是有一点需要注意：全站 Https，泛域名的 SSL 证书 必须要部署到 CDN 上，否则 CDN 会用腾讯云的证书然后就证书不符报错啦。 四、附录 （1）CentOS 配置 Nginx 1.安装 Nginx1yum install -y nginx 2.启动 Nginx1systemctl start nginx.service 3.设为开机自启1systemctl enable nginx.service 4.Nginx 配置信息网站文件存放默认目录：/usr/share/nginx/html网站默认站点配置文件：/etc/nginx/conf.d/default.conf自定义站点配置文件：/etc/nginx/conf.d/全局配置文件：/etc/nginx/nginx.conf （2）Nginx 配置 Http 跳转 Https均修改全局配置文件 nginx.conf 。 1.开启 443 监听12345678910111213server &#123; listen 443 ssl http2 default_server; listen [::]:443 ssl http2 default_server; server_name inkss.cn; root /usr/share/nginx/html; ssl_certificate &quot;/etc/pki/nginx/fullchain.cer&quot;; ssl_certificate_key &quot;/etc/pki/nginx/inkss.key&quot;; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; ...&#125; 2.Http 跳转 Https在监听 80 的函数内添加 rewrite ^(.*)$ https://$host$1 permanent;：server { listen 80 default_server; listen [::]:80 default_server; server_name inkss.cn; root /var/www/html; rewrite ^(.*)$ https://$host$1 permanent; ... } 回到顶部 © Inkss","categories":[{"name":"other","slug":"other","permalink":"https://inkss.cn/categories/other/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://inkss.cn/tags/Linux/"},{"name":"网站","slug":"网站","permalink":"https://inkss.cn/tags/网站/"}]},{"title":"Hexo 博客搭建","slug":"18-09/Hexo博客搭建","date":"2018-09-14T16:00:00.000Z","updated":"2019-09-10T08:20:40.567Z","comments":true,"path":"article/info/196d2ba7.html","link":"","permalink":"https://inkss.cn/article/info/196d2ba7.html","excerpt":"","text":"本文偏向于记录备份，非新手向教程，仅供参考。 🐱先说搭建这个博客的原因：在搭建博客之前我的所有的文章都是存储在 inkss/markdown 仓库中，直到某天 在投简历的时候发现有的要求填写博客链接 ，掐指一算在玩腻饥荒后似乎还闲置着一个腾讯云的学生主机，索性自己折腾一个博客出来。而以简单快速为目的话，还是主推： Hexo 。Hexo 可以帮忙生成全静态的网页，所以在存储位置上可以有：Github Page、OSS 对象存储、云主机 等多种选择。那么接下来就是研究一下如何使用这个框架，以及找一个好看顺心的主题（然后连续几天沉迷调试主题不可自拔…)。 目录目录1.基础环境1.1 安装 NVM1.2 安装 Node1.3 安装 Hexo2.Hexo 使用2.1 基础命令2.2 网站配置2.2.1 修改主题类型2.2.2 部署到 Github2.2.3 忽略解析指定的文件2.3 主题配置2.3.1 安装主题2.3.2 安装插件2.3.3 配置主题3.自定义主题3.1 CSS 样式修改3.1.1 修改字体大小3.1.2 修改代码样式3.1.3 修改图形居中3.1.4 修改代码字体3.2 恢复 referrer3.3 TOC 编号3.4 回到顶部3.5 数学公式支持4.网站优化4.1 自定义域名解析4.2 CDN 分发4.2.1 添加域名4.2.2 缓存配置4.3 Https 链接4.4 OSS 对象存储5.Hexo 部署5.1 域名解析 DNS5.2 CDN 热备5.3 对象存储 1.基础环境基础环境：Git、Node、Hexo；OS ：Ubuntu 18.04 LTS ；服务器：CentOS 7.4 。Git 和 Github 作为前置环境，本文不做重点阐述。Git 的安装命令：sudo apt install git 。那么进入正文部分，这里的顺序是这样的：NVM ➡️ Node.js ➡️ Hexo 。 1.1 安装 NVM12# 打开终端，输入：wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 1.2 安装 Node12# 打开新的终端，输入：nvm install stable 1.3 安装 Hexo12# 打开新终端，输入：npm install -g hexo-cli以上所有步骤就可以将 Hexo 安装到你的电脑上了，总耗时 1-2 min 。得益于某不可言的 BUFF 加持，在不作处理的情况下网速或能够让你绝望。两类选择：换源 or 代理 。换源似乎是使用淘宝的 cnpm 源；虽然这里使用的是给终端设置代理：Shadowsocks 设置终端代理 。 2.Hexo 使用 2.1 基础命令这部分内容以 Hexo 官方文档为准，这里记录一些最常用的。传送门：命令 | Hexo初始化：hexo init &amp;&amp; npm install生成博客：hexo g部署博客：hexo d清空缓存：hexo clean启动本地服务器：hexo s组合命令：hexo clean &amp;&amp; hexo g -d首先，拿到 Hexo 后，先是 初始化 一个文件夹，建立基本的框架结构，然后用 npm install 安装一些依赖。目录结构如下：123456789.├── _config.yml # 网站配置文件├── .gitignore # Git 忽略文件├── node_modules # 插件安装目录├── package.json # 描述插件├── package-lock.json # 描述插件 更详细├── scaffolds # 模板├── source # 资源└── themes # 主题想必各位对 .gitignore 很眼熟吧，完全可以使用 git init 对这个文件夹初始化后上传到 Github 仓库。而这样操作需要注意一点：一般主题文件多半是克隆自 Git 的，所以可能会出现嵌套的情况。可选的处理方案：将主题目录加入到忽略文件中删除主题目录里的 .git 文件夹**关于恢复：**克隆仓库后，需要执行 npm install --save ，重新安装插件到 node_modules 目录中。 2.2 网站配置网站 配置文件：_config.yml ，官方配置文档传送门：配置 | Hexo一般来说在该配置文件中只需要修改一些网站基本属性，下面记录一下指定主题和设置发布（部署）对象： 2.2.1 修改主题类型1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: pure 2.2.2 部署到 Github123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:xxxx/xxxxx branch: master 2.2.3 忽略解析指定的文件123# Directory# 忽略解析指定文件：比如 Github 仓库的 ReadMe.md 文件。skip_render: README.mdPS：一些插件的属性设置也是在这个文件中配置的。 2.3 主题配置如果不是找到了一个看着还很舒服的主题，肯定也没有那么大的兴趣折腾博客了。这里使用的是 Pure ：原作者：cofess 、主题：hexo-theme-pure 。 2.3.1 安装主题12# 在网站的根目录下执行git clone git@github.com:dmego/hexo-theme-pure.git theme/pure然后修改 网站配置 文件,修改主题：theme: pure 。 2.3.2 安装插件分为必装和可选两种吧，安装插件时终端目录需位于网站根目录下（Hexo 初始化的那个目录）。① 必装插件（这部分主题 ReadMe 文件中有提及）：12345npm install hexo-wordcount --savenpm install hexo-generator-json-content --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save② 可选插件（一些需要在 网站配置 文件中修改属性）。hexo-neat：压缩代码1npm install hexo-neat --save1234567891011121314151617# 网站配置文件 `_config.yml` 中添加：# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'hexo-translate-title：自动翻译文章标题到英文1npm install hexo-translate-title --save12345678# 网站配置文件 `_config.yml` 中添加：# translatetranslate_title: translate_way: google #google | baidu | youdao youdao_api_key: XXX youdao_keyfrom: XXX is_need_proxy: true #true | false proxy_url: http://localhost:8123123# 修改文章的永久链接格式（同样是网站配置文件）：# URLpermalink: :year/:month/:day/:translate_title/hexo-filter-github-emojis：支持 emoji 表情1npm install hexo-filter-github-emojis --save123456789# 网站配置文件 `_config.yml` 中添加：# emojigithubEmojis: enable: true className: github-emoji unicode: false styles: display: inline localEmojis:③ 部署到 Github 所必须的插件：12nom install request --savenpm install hexo-deployer-git --save 2.3.3 配置主题主题所在目录下也有一份 _config.yml 文件，这里称它为 主题配置 文件。可以在此处对主题属性进行修改，附：图片类的资源可以直接写外链进去。 3.自定义主题此部分内容仅供参考，或因主题变更已不适用。2018.10.08 补充。 3.1 CSS 样式修改主要是网页样式微调，改改字体什么的。文件地址： themes/pure/source/css/style.css 3.1.1 修改字体大小默认的字体是 14px ，似乎有些小了，所以将其改为 16px 。12345678body &#123; padding-right: 0 !important; font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"PingFang SC\",\"Hiragino Sans GB\",\"Microsoft YaHei\",sans-serif; font-size: 16px; line-height: 1.42857; color: #333333; background-color: #fff;&#125; 3.1.2 修改代码样式原主题无法显示出这样的效果： code ，从 Github 扒的样式，这里对其补充。1234567code &#123; padding: 0.2em 0.3em; margin: 0; font-size: 85%; background-color: rgba(27,31,35,0.05); border-radius: 3px;&#125; 3.1.3 修改图形居中原文章中图片没有居中，这里将图片的显示更改为居中。1234567.main img&#123; box-sizing: border-box; margin: auto; padding: 3px; text-align: center; display: block;&#125; 3.1.4 修改代码字体Windows 下代码字体显示不是很美观，这里更改。1234567code,kbd,pre,samp &#123; font-family: \"SFMono-Regular\",Consolas,\"Liberation Mono\",Menlo,Courier,monospace; font-size: 1em;&#125; 3.2 恢复 referrer【已解决】详细见：#43 3.3 TOC 编号TOC 编号，就是当展开目录时，原章节的目录内容附加了一次自动编号，如果文章本身存在着编号那么编号就重复了，所以此处更改为取消自动编号。文件地址： themes/pure/layout/_partial/sidebar-toc.ejs123456&lt;div class=\"slimContent\"&gt; &lt;nav id=\"toc\" class=\"article-toc\"&gt; &lt;h3 class=\"toc-title\"&gt;&lt;%= __('article.catalogue') %&gt;&lt;/h3&gt; &lt;%- toc(post.content,&#123;list_number: false&#125;) %&gt; &lt;/nav&gt;&lt;/div&gt; 3.4 回到顶部长文章怎么能没有一个回到顶部的功能，然而恰巧主题没有，那么添加一个吧（位于右下角）。文件地址： themes/pure/layout/_commonn/script.ejs1&lt;div id=\"go-top\"&gt;&lt;/div&gt;1234567891011121314151617181920&lt;style type=\"text/css\"&gt;#go-top &#123; width:40px;height:36px; background-color:#777; position:relative; border-radius:2px; position:fixed;right:10px;bottom:60px; cursor:pointer;display:none;&#125;#go-top:after &#123; content:\" \"; position:absolute;left:14px;top:14px; border-top:2px solid #fff;border-right:2px solid #fff; width:12px;height:12px; transform:rotate(-45deg);&#125;#go-top:hover &#123; background-color:#333;&#125;&lt;/style&gt;123456789101112&lt;script&gt;$(function () &#123; var top=$(\"#go-top\"); $(window).scroll(function () &#123; ($(window).scrollTop() &gt; 300) ? top.show(300) : top.hide(200); $(\"#go-top\").click(function () &#123; $('body,html').animate(&#123;scrollTop:0&#125;); return false(); &#125;) &#125;);&#125;);&lt;/script&gt; 3.5 数学公式支持需要先更换 Hexo 的渲染引擎：12npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save接着在网站配置文件末尾添加以下内容：12345678910111213markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ plugins: - plugin: name: '@iktakahiro/markdown-it-katex' enable: true最后需要修改主题文件，更新 Katex 版本。文件地址： themes/pure/layout/_commonn/plugin.ejs1234&lt;% if (page.mathjax) &#123; %&gt; &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-rc.1/dist/katex.min.css\" integrity=\"sha384-D+9gmBxUQogRLqvARvNLmA9hS2x//eK1FhVb9PiU86gmcrBrJAQT8okdJ4LMp2uv\" crossorigin=\"anonymous\"&gt; &lt;script defer src=\"https://cdn.jsdelivr.net/npm/katex@0.10.0-rc.1/dist/katex.min.js\" integrity=\"sha384-483A6DwYfKeDa0Q52fJmxFXkcPCFfnXMoXblOkJ4JcA8zATN6Tm78UNL72AKk+0O\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;&lt;% &#125; %&gt; 4.网站优化这部分内容将会涉及：自定义域名解析、CDN 分发、OSS 对象存储、Https 加密链接等。本博客所使用的所有服务均来自于腾讯云。😘 4.1 自定义域名解析Github 给的默认域名形如 xxxx.github.io 的样式，如果拥有自己的域名话就可以对 DNS 设置一条指向该域名的 CNAME 解析。此外在网站的 source 目录下也需要放置一个文件：CNAME ，内容上只需要填写你的个人域名。 4.2 CDN 分发Github Page 的服务器毕竟不在国内（查过图片的 CDN 发现是来自日本的），虽然国外访问速度还好，但是国内访问速度就很悲伤了。不过国外的访问速度也不能浪费，所以上文的 DNS 记录就分为国内、国外两个：照顾所有位置的访问速度。腾讯云的 CDN 似乎有 10G 免费额度，付费额度：100GB 20元/6个月。 4.2.1 添加域名申请 CDN 时，有两个需要填写的：源站类型 和 域名 。域名自然是需要加速的域名，而源站类型则有以下几种：源站 IP 、源站域名 、 对象存储 。对象存储 只能是腾讯云的，这里先不展开；源站域名 的话有一个前置要求：需要备案。所以最方便的莫过于选择 源站 IP ，IP 的获取方法是用 ping 命令访问 Github 给你的域名后得到的。当然，如果有自己的云主机，此处填写自己的主机 IP 也是可以的，本博客便是这样做的：好处是如果访问链接没有命中 CDN ，国内服务器的访问速度也比国外较快（回源时的时间消耗减少），同时 CDN 获取源站信息也有速度优势。 4.2.2 缓存配置另外一个需要关注的就是：缓存配置 （缓存过期配置）。Hexo 生成的网页是全静态的，为了提高 CDN 命中率，可以把全站缓存的时间设置的相对久一些。 4.3 Https 链接Github 本身是支持 设置 Https 链接的，证书由 Github 自动颁发、续期。不过需要用户手动开启：Enforce HTTPS此外，如果使用了和本博客类似的手段：DNS 根据 IP 指向不同域名的话，在访问者位于国内时，仍需要配置一个证书。原因是国内的 IP 被 DNS 指向了 CDN 域名了，没有指向 Github ，那么 Github 给的证书便是无效不起作用，这里有两种选择：没有云主机的可以通过 CDN 开启强制跳转 HTTPS （国外访问 Github 会帮助你自动跳转）。有云主机的设置服务器的 HTTP 强制跳转 HTTPS ，也可以同时勾选 CDN 的强制跳转。在腾讯云可以免费申请到一年的 SSL 证书，一般一至两天申请便可以批下来。云主机配置可以参看这篇文章：CentOS PHP 环境配置 [LAMP] 4.4 OSS 对象存储如果以减少成本为目的的话，最好的选择不是云主机而是 对象存储 。关于免费额度：50GB 空间、10 GB 流量/CDN 回源、100 万次请求。如果是只当图床使用，一般默认的配置即可；如果是当静态网页使用需要先手动开启这个功能，然后把域名 解析到对象存储分配给你的域名上 。此外对象存储也支持 CDN ，不过同样也需要手动开启。最后的最后还需要将 Hexo 网页的部署对象换成腾讯云的 OSS （有相关插件）。备注：记得给对象存储或者 CDN 开启防盗链。⚓️ 5.Hexo 部署这部分单独拿出来说，因为现在一直在做一个假设：当服务器 宕机/停止续费 后如何保证网站的正常访问。此外还有一个需求就是：降低网站总开销（最大的开支应该会出自服务器上）。 5.1 域名解析 DNS先谈谈防止宕机，前面域名部分提到了现在对域名是直接解析，依靠 IP 地址指向不同的域名。国外流量指向 Github Page ，这部分不用担心；而国内流量则被指向到腾讯云的 CDN，所以需要修改这里。此处开支：.cn 域名 35 元/年、DNS 解析套餐免费。 5.2 CDN 热备CDN 的自有源支持热备，也就是主源宕机，热备源回源。那么重点也就是这儿了：设置热备源：xxxx.github.io 。此处开支：免费 10GB 0元/月、付费 100GB 20元/6月。 5.3 对象存储主机宕机的问题解决了，但是如果主机停止续费呢，CDN 从 Github 回源又降低了速度，所以就考虑了 OSS 。此部分的大标题叫做：Hexo 部署，既然是部署自然也就想到部署到对象存储里。需要插件：1npm install hexo-deployer-cos-enhanced --save使用方法见：hexo-deployer-cos-enhanced 。相关额度如下：资源类型资源子类型每月免费额度存储空间存储空间50 GB流量外网下行流量10 GB流量腾讯云 CDN 回源流量10 GB请求读请求100 万次请求写请求100 万次回到顶部 © Inkss","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"网站","slug":"网站","permalink":"https://inkss.cn/tags/网站/"},{"name":"Hexo","slug":"Hexo","permalink":"https://inkss.cn/tags/Hexo/"}]},{"title":"Shadowsocks 设置终端代理","slug":"18-09/Shadowsocks 设置终端代理","date":"2018-09-09T16:00:00.000Z","updated":"2019-09-10T08:21:04.003Z","comments":true,"path":"article/linux/f44c3b52.html","link":"","permalink":"https://inkss.cn/article/linux/f44c3b52.html","excerpt":"","text":"今天在使用 NVM 安装 Node.js 时，在终端下到克隆仓库这一步时体验简直崩溃，几乎没有网速。所以就迫切的需要 Shadowsocks 也能够代理终端下的命令。Shadowsoks 相关配置参阅这里： Shadowsocks 一、Git 的代理如果不需要终端下全局代理，仅仅只是代理 Git 相关的命令，则有一个简单的方案：12git config --global http.proxy 'socks5://127.0.0.1:1080' git config --global https.proxy 'socks5://127.0.0.1:1080' 二、终端下代理虽说对 Git 设置了代理可以解决克隆仓库无进度的问题，但是一些命令（安装 Node.js ）依旧没网速。所以还是需要对终端进行代理，首先需要修改终端的环境变量，修改文件并追加以下内容：123export http_proxy=socks5://127.0.0.1:1080export https_proxy=socks5://127.0.0.1:1080# 注意：wget 不支持的协议类型 “socks5”如果你的 Shell 还是默认的 Bash ，那么修改需要修改的文件位于：~/.bashrc而如果 Shell 已经换成了 ZSH ，此时需要修改的文件就位于：~/.zshrc然后接下来只需要使其生效：1source ~/.bashrc # 或者 .zshrc关闭这个终端，重新打开一个新的终端进行测试：1curl ip.cn # 观察输出内容 三、其它1234git config --global user.name \"xxxx\"git config --global user.email \"xxx@gmail.com\"ssh-keygen -t rsa -C \"xxxp@gmail.com\"ssh git@github.com参考资料：用 shadowsocks 加速 git cloneLinux bash终端设置代理（proxy）访问回到顶部 © Inkss","categories":[{"name":"linux","slug":"linux","permalink":"https://inkss.cn/categories/linux/"}],"tags":[{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"https://inkss.cn/tags/Shadowsocks/"}]},{"title":"Linux 命令概述","slug":"18-09/Linux命令概述","date":"2018-09-09T16:00:00.000Z","updated":"2019-09-10T08:20:47.739Z","comments":true,"path":"article/linux/e8e370d.html","link":"","permalink":"https://inkss.cn/article/linux/e8e370d.html","excerpt":"","text":"OS： Deepin 15.5Shell： zsh 5.3.1 1.基础命令 1.1 clear：清屏 1.2 pwd： 显示路径12➜ Desktop pwd/home/inkss/Desktop 1.3 ls：列出目录内容命令含义ls列出当前路径的文件和目录ls -a列出当前路径的所有文件和目录ls -l以列表形式列出当前路径的文件和目录ls -l -h优化 -l 时的文件大小显示ls D*列出以 D 开头的文件和目录ls命令后可跟正则表达式,同时选项也可以全部出现，即 ls -alh 的形式，作用为三者的集合；ls -h 命令中的h单独出现时是不起作用，需配合另外两个共同使用； Linux 中以 . 开头的文件/文件夹都是隐藏文件。123456789101112➜ Pictures lsa.txt Wallpapers➜ Pictures ls -l总用量 4-rw-r--r-- 1 inkss inkss 0 1月 22 17:59 a.txtdrwxr-xr-x 2 inkss inkss 4096 12月 10 19:41 Wallpapers➜ Pictures ls -lh总用量 4.0K-rw-r--r-- 1 inkss inkss 0 1月 22 17:59 a.txtdrwxr-xr-x 2 inkss inkss 4.0K 12月 10 19:41 Wallpapers 1.4 cd：跳转目录命令含义cd 目录进入目录cd 目录1/目录2从当前目录起进入指定目录cd /目录1/目录2从根目录起进入指定目录cd …跳转到当前路径的上一层cd -返回上一操作所处在的目录cd ~跳转到当前用户的家目录1234567➜ Desktop cd ..➜ ~ cd Documents➜ Documents cd ../..➜ /home cd inkss/Desktop➜ Desktop cd -/home➜ /home 1.5 touch：创建文件（创建文件，已存在的文件不覆盖）。1234➜ Desktop touch a.txt➜ Desktop ls -l总用量 0-rw-r--r-- 1 inkss inkss 0 1月 23 15:01 a.txt 1.6 cat：查看文件cat filename.txt 查看文件的内容。 2.重定向 分屏 管道 2.1 &gt;：重定向修改内容输出方向（重新设定原显示方向）。&gt; ： 文件不存在则创建，存在则覆盖。&gt;&gt; ：文件不存在则创建，存在则追加。123456789101112➜ ~ lsDesktop Documents Downloads Music Pictures Templates Videos➜ ~ ls &gt; test.txt➜ ~ cat test.txtDesktopDocumentsDownloadsMusicPicturesTemplatestest.txtVideos 2.2 more：分屏查看内容时，当信息过长无法在一屏上显示时，会出现快速滚屏，此时可以使用 more 命令，每次只显示一页，通过空格键切换下一页，按下 q 键退出，按下 h 键获取帮助。 2.3 |：管道一个命令的输出可以通过管道作为另外一个命令的输入。管道的左端写入东西，右端取出东西，用以连接两条命令。12345678910111213➜ Desktop cd ~➜ ~ ls -alh | more总用量 320Kdrwxr-xr-x 40 inkss inkss 4.0K 1月 23 15:08 .drwxr-xr-x 3 root root 4.0K 12月 8 19:17 ..-rw------- 1 inkss inkss 268 12月 8 19:55 .bash_history-rw-r--r-- 1 inkss inkss 220 12月 8 19:04 .bash_logout-rw-r--r-- 1 inkss inkss 3.7K 12月 8 19:04 .bashrcdrwxr-xr-x 15 inkss inkss 4.0K 1月 13 18:15 .cachedrwxr-xr-x 3 inkss inkss 4.0K 12月 8 19:04 .iconsdrwxr-xr-x 3 inkss inkss 4.0K 12月 8 21:58 .javadrwxr-xr-x 3 inkss inkss 4.0K 12月 11 12:40 .kingsoft--More-- 2.4 利用cat、&gt;合并文件cat 的作用可以视为将文本内容打印到终端上，同时 cat 又可以显示（打印）多个文件到终端，配合重定向 &gt; 输出到文件里，即完成了多个文件的合并操作。1234567891011121314151617181920➜ Desktop cat a1.txt1111111111➜ Desktop cat a2.txt2222222222➜ Desktop cat a1.txt a2.txt a3.txt111111111122222222223333333333➜ Desktop cat a*.txt &gt; b.txt➜ Desktop cat b.txt111111111122222222223333333333➜ Desktop ls -l总用量 16-rw-r--r-- 1 inkss inkss 11 1月 23 18:05 a1.txt-rw-r--r-- 1 inkss inkss 11 1月 23 18:05 a2.txt-rw-r--r-- 1 inkss inkss 11 1月 23 18:05 a3.txt-rw-r--r-- 1 inkss inkss 33 1月 23 18:07 b.txt➜ Desktop 3.查阅帮助文档 3.1 命令 --help123456789➜ Desktop grep --help | more用法: grep [选项]... PATTERN [FILE]...Search for PATTERN in each FILE.Example: grep -i 'hello world' menu.h main.cPattern selection and interpretation: -E, --extended-regexp PATTERN is an extended regular expression -F, --fixed-strings PATTERN is a set of newline-separated strings--More-- 3.2 man 命令1➜ Desktop man grep 4.链接命令含义ln 源文件 链接文件硬链接ln -s 源文件 链接文件软链接链接：软链接和硬链接：软链接与 Windows 上的快捷方式概念完全一致。而硬链接则很类似 C 语言中的指针，源文件与链接文件共同指向同一份数据内容，所以在删除源文件时只是将源文件与数据内容的关联删除，通过链接文件依然能访问数据内容。1234567891011┌ d:目录 -：文件 l：链接│ ┌ 硬链接数↓ ↓drwxr-xr-x 2 inkss inkss 4096 1月 23 16:14 a-rw-r--r-- 2 inkss inkss 25 1月 23 16:13 a_hard.txt-rw-r--r-- 2 inkss inkss 25 1月 23 16:13 a.txtlrwxrwxrwx 1 inkss inkss 5 1月 23 16:16 b_soft.txt -&gt; b.txt-rw-r--r-- 1 inkss inkss 11 1月 23 16:15 b.txt └───┬───┘ └────┬────┘ │ └─ 用户 用户组 └─ 权限 5.目录 5.1 mkdir：创建目录命令含义mkdir 目录名在当前路径下创建目录mkdir -p 目录1/目录2递归的创建目录 5.2 tree：树形显示当前目录结构1234567891011121314151617181920212223➜ / cd ~/Desktop➜ Desktop lsa a.txt➜ Desktop mkdir python_haha➜ Desktop ls -l总用量 8-rw-r--r-- 1 inkss inkss 0 1月 23 15:04 a-rw-r--r-- 1 inkss inkss 17 1月 23 15:03 a.txtdrwxr-xr-x 2 inkss inkss 4096 1月 23 15:16 python_haha➜ Desktop mkdir -p A/B➜ Desktop cd A/B➜ B pwd/home/inkss/Desktop/A/B➜ B cd ~/Desktop➜ Desktop tree.├── a├── A│ └── B├── a.txt└── python_haha3 directories, 2 filesDeepin 默认没有安装 tree，如需使用请先安装：sudo apt install tree 6.文件操作 6.1 cp：复制用法：cp [选项]… [-T] 源文件 目标文件选项含义-a保留文件属性（递归的复制）-f目录文件已经存在而不提示-i交互式复制，在覆盖文件前需要用户确认-r如果源文件是目录，则递归的复制该目录下的所有子目录和文件-v显示复制进度f 用以强制复制，a 用以保留诸如链接之类的属性，r 用来复制目录。cp a b: 将 a 文件夹整体复制到 b 文件夹里；cp a/* b：将 a 文件夹里的内容复制到 b 文件夹里.123456789101112131415➜ Desktop ls -l总用量 0-rw-r--r-- 2 inkss inkss 0 1月 23 19:20 a_hard.txtlrwxrwxrwx 1 inkss inkss 5 1月 23 19:43 a_soft.txt -&gt; a.txt-rw-r--r-- 2 inkss inkss 0 1月 23 19:20 a.txt➜ Desktop cp a_soft.txt b1.txt➜ Desktop cp a_soft.txt -a b2.txt➜ Desktop ls -l总用量 0-rw-r--r-- 2 inkss inkss 0 1月 23 19:20 a_hard.txtlrwxrwxrwx 1 inkss inkss 5 1月 23 19:43 a_soft.txt -&gt; a.txt-rw-r--r-- 2 inkss inkss 0 1月 23 19:20 a.txt-rw-r--r-- 1 inkss inkss 0 1月 23 19:45 b1.txtlrwxrwxrwx 1 inkss inkss 5 1月 23 19:43 b2.txt -&gt; a.txt➜ Desktop 6.2 mv：移动用法：mv [选项]… [-T] 源文件 目标文件选项含义-f强制移动，不会用任何提示-i交互式操作，覆盖前会询问-v显示移动进度123456➜ Desktop lsa.txt➜ Desktop mv a.txt a.ttt➜ Desktop lsa.ttt➜ Desktop 6.3 删除 6.3.1 rmdir：删除目录123456➜ Desktop rmdir python_haha➜ Desktop lsa A a.txt➜ Desktop rmdir Armdir: 删除 'A' 失败: 目录非空➜ Desktop 6.3.2 rm：删除文件/文件夹命令含义rm 文件名删除文件rm -r 目录删除目录（递归）rm -i 文件交互式删除（删除前需确认）rm -f 文件强制删除rm 后跟文件名支持正则表达式。1234567891011121314151617➜ Desktop tree.└── a └── b ├── bbb.ccc └── c └── d4 directories, 1 file➜ Desktop rm -rf a/*zsh: sure you want to delete the only file in /home/inkss/Desktop/a [yn]? y➜ Desktop➜ Desktop tree.└── a1 directory, 0 files123456789101112131415➜ Desktop tree.└── a ├── aaa │ └── a.txt └── b.txt2 directories, 2 files➜ Desktop rm -r a/aaa➜ Desktop tree.└── a └── b.txt1 directory, 1 file 6.4 grep：查找命令含义grep -v ‘搜索内容串’ 文件名不匹配文本的所有行（求反）grep -n ‘搜索内容串’ 文件名显示匹配行及其行号grep -i ‘搜索内容串’ 文件名忽略大小写12345678910➜ Desktop grep -n 'printf' test.c4: printf(\"Hello,Nice to meet you!\\n\");5: printf(\"Bye!\\n\");➜ Desktop grep -nv 'printf' test.c1:#include&lt;stdio.h&gt;2:int main(void)3:&#123;6: return 0;7:&#125;➜ Desktop允许对文本进行模式查找，如果找到匹配模式，则打印包含模式的所有行。同时，grep 也支持正则表达式。 6.5 find：搜索命令含义find ./ -name test.txt查找当前目录下所有名为 test.txt 的文件find ./ -name ‘*.sh’查找当前目录下所有后缀为 .sh 的文件find /tmp -size 2M查找 /tmp 目录下等于 2M 的文件find /tmp -size +2M查找 /tmp 目录下大于 2M 的文件find /tmp -size -2M查找 /tmp 目录下小于 2M 的文件find /tmp -size +4k -size -5M查找 /tmp 目录下大于 4K、小于 5M 的文件find ./ -perm 0777查找当前目录下权限为 777 的文件或目录1234567891011➜ Desktop tree.├── a│ └── a.txt└── a.txt1 directory, 2 files➜ Desktop find ./ -name a.txt./a/a.txt./a.txt➜ Desktop123456789➜ share pwd/usr/share➜ share find ./ -size +50M -size -60M./tesseract-ocr/tessdata/chi_tra.traineddata➜ share find ./ -size +50M./code/code./tesseract-ocr/tessdata/chi_tra.traineddata./qt4/doc/qch/qt.qch➜ share 7.压缩、解压缩 7.1 tar：打包、解包文件用法：tar [选项]… [FILE]…选项含义-c创建档案文件-x解开档案文件-v显示归档解档进度-t列出档案中包含的文件-f指定档案文件名称（必须位于选项中最后位置）1234567891011➜ Desktop cd ../Pictures➜ Pictures lsWallpapers➜ Pictures tar -cvf test.tar ./Wallpapers/*./Wallpapers/1.png./Wallpapers/2.jpg./Wallpapers/3.jpg./Wallpapers/4.jpg➜ Pictures lstest.tar Wallpapers➜ Pictures 7.2 gzip：压缩、解压缩tar 仅仅是打包了文件，没有压缩，所用通过 gzip 生成 xxxx.tar.gz 的压缩文件.用法：gzip [选项]… [FILE]…（不跟选项情况下为压缩）选项含义-d解压-r压缩12345678➜ Desktop ls -lh总用量 3.7M-rw-r--r-- 1 inkss inkss 3.7M 1月 23 21:46 test.tar.gz➜ Desktop gzip -d test.tar.gz➜ Desktop ls -lh总用量 3.8M-rw-r--r-- 1 inkss inkss 3.8M 1月 23 21:46 test.tar➜ Desktop截止到目前，是先通过 tar 打包，再通过 gzip 压缩；解压则是先通过 gzip 解压，再通过 tar 解包。tar -cvf xxx.tar * 打包gzip xxx.tar 压缩gzip -d xxx.tar.gz 解压tar -xvf xxx.tar 解包 7.3 解压与压缩 7.3.1 tar一步到位的压缩命令：tar -zcvf xxx.tar.gz *一步到位的解压命令：tar -zxvf xxx.tar.gz 7.3.2 bzip2算法tar -jcvf xxx.tar.bz2 *：压缩tar -jxvf xxx.tar.bz2：解压123456789101112131415161718➜ Desktop tar -jcvf Wallpapers.tar.bz2 WallpapersWallpapers/Wallpapers/1.jpgWallpapers/2.pngWallpapers/3.jpgWallpapers/4.jpg➜ Desktop tar -zcvf wallpapers.tar.gz WallpapersWallpapers/Wallpapers/1.jpgWallpapers/2.pngWallpapers/3.jpgWallpapers/4.jpg➜ Desktop ls -l总用量 7456drwxr-xr-x 2 inkss inkss 4096 1月 23 21:59 Wallpapers-rw-r--r-- 1 inkss inkss 3784740 1月 23 22:13 Wallpapers.tar.bz2-rw-r--r-- 1 inkss inkss 3839708 1月 23 22:13 wallpapers.tar.gz➜ Desktop 7.3.3 指定解压路径tar -zxvf xxx.tar.gz -C ./xxx/xxx：指定解压路径 7.3.4 zip、upzip：压缩、解压缩命令含义zip 目标文件 源文件压缩文件unzip 目录 压缩文件解压文件 8.系统相关命令 8.1 cal：在终端下查看日历 8.2 date：显示或设置时间 8.3 ps：查看进程信息ps -aux详细显示终端上所有进程可以通过该命令获取进程 PID 号 8.4 top：动态显示进程信息按键含义M按照内存使用量进行排序显示P按照 CPU 使用率进行排序显示Q退出程序H获取帮助 8.5 kill：杀死进程命令含义kill pid根据进程 PID 值杀死进程kill -9 pid强制结束 8.6 reboot、shutdown：关机重启命令含义reboot重启操作系统shutdown -r now重启操作系统，跟别的用户予以提示shutdown -h now立刻关机shutdown -h +1010min 后关机shutdown -h 22：2022：20 时关机 8.7 df：查看磁盘所用空间 8.8 du：查看当前目录占用磁盘大小 8.9 ifconfig：查看网卡信息 8.10 ping：测试主机连通性回到顶部 © Inkss","categories":[{"name":"linux","slug":"linux","permalink":"https://inkss.cn/categories/linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://inkss.cn/tags/Linux/"}]},{"title":"Linux 系统命令","slug":"18-09/Linux系统命令","date":"2018-09-09T16:00:00.000Z","updated":"2019-09-10T08:20:51.331Z","comments":true,"path":"article/linux/e8c3347c.html","link":"","permalink":"https://inkss.cn/article/linux/e8c3347c.html","excerpt":"","text":"OS： Deepin 15.5Shell： zsh 5.3.1提权 sudo -s可以通过命令前添加 sudo 获得临时权限；也可以执行 sudo -s 后输入当前用户的密码切换到 root 用户下，通过 exit 命令退出 root 用户。添加用户 useradd -m 用户名 组名、家目录名同用户名。设置密码 passwd 用户名 管理员权限下执行该命令可强制修改密码，普通权限下仅能修改自身密码且需要验证原密码。【新创建的用户无密码】删除用户 userdel -r 用户名 删除用户名的同时删除其家目录。切换用户 su 用户名 可在用户名前加-回到切换后用户的家目录；Ubuntu 默认没有 root 账户，对管理员的权限大部分可以通过 sudo 命令调用，但是可以通过给 root 用户设置密码通过 su root 也能切过去。查看系统中的所有用户 cat /etc/passwd查看系统中的所有分组 cat /etc/group 也可以利用终端的自动补全功能输入groupmod后按下Tab列出所有组名。PS：不在 adm 和 sudo 组中的用户，无法使用 sudo 命令。添加组 groupadd 组名； 删除组 groupdel 组名查看用户所在组 groups 用户名；查看分组中的账户 cat /etc/group | grep 组名 本质上是穿给管道给 grep 进行搜索。修改用户默认组 usermod -g 组名 用户名 ；给用户添加一个组 usermod -a -G 组名 用户名回到顶部 © Inkss","categories":[{"name":"linux","slug":"linux","permalink":"https://inkss.cn/categories/linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://inkss.cn/tags/Linux/"}]},{"title":"Git 管理私钥","slug":"18-09/Git管理私钥","date":"2018-09-07T16:00:00.000Z","updated":"2019-09-10T08:20:36.651Z","comments":true,"path":"article/git/d71b1012.html","link":"","permalink":"https://inkss.cn/article/git/d71b1012.html","excerpt":"","text":"一、添加私钥1.Linux 平台：打开终端到 id_rsa 文件所在目录2.Windows 平台：id_rsa 文件所在目录右键打开 Git Bash Here123456# 终端执行ssh-add id_rsa# 如果提示：Could not open a connection to your authentication agent# 执行下列语句ssh-agent bash 二、新建 config 文件文件内容如下：需要注意的是：IdentityFile 指向 id_rsa 文件,不一定非要放在 .ssh 目录123456# githubHost github.comHostName github.comPreferredAuthentications publickeyIdentityFile /home/yourname/Documents/ssh/id_rsaUser yourname复制该文件到 ssh 目录：1.Linux 平台：/home/yourname/.ssh/2.Windows 平台：/c/Users/yourname/.ssh/ 三、测试链接12345ssh -T git@github.com# 设置 name 与 emailgit config --global user.name \"name\"git config --global user.email \"email\" 附录对于 Linux 系统，如果是直接复制 config 和 id_rsa 文件多半会收到下列提示：Bad owner or permissions on ... permissions are too open error 很明显，是权限的问题使得私钥未被接收，所以修改这两个文件的权限即可：chmod 400 ~/.ssh/config chmod 400 ~/.ssh/id_rsa 回到顶部 © Inkss","categories":[{"name":"git","slug":"git","permalink":"https://inkss.cn/categories/git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://inkss.cn/tags/Git/"}]},{"title":"开源协议","slug":"18-09/开源协议","date":"2018-09-07T16:00:00.000Z","updated":"2019-09-10T08:21:07.583Z","comments":true,"path":"article/other/e57bd50f.html","link":"","permalink":"https://inkss.cn/article/other/e57bd50f.html","excerpt":"","text":"一张图看懂开源协议（图片来源见水印）回到顶部 © Inkss","categories":[{"name":"other","slug":"other","permalink":"https://inkss.cn/categories/other/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://inkss.cn/tags/Git/"}]},{"title":"Jrebel 反代激活","slug":"18-09/Jrebel反代激活","date":"2018-09-07T16:00:00.000Z","updated":"2019-09-10T08:20:44.043Z","comments":true,"path":"article/info/89be439.html","link":"","permalink":"https://inkss.cn/article/info/89be439.html","excerpt":"","text":"JRebel 的社区激活取消了，不能用分享到脸书的方式激活插件了，有点桑心。搜索了一番本地激活方法，于此记录。 1 准备工具在 ilanyu/ReverseProxy 下载工具，相应操作系统选择自己对应的版本。在 Online GUID Generator 获取一串 GUID，记录之。IDEA 上在线下载 JRebel 插件。 2 激活运行步奏一下载的程序（如果端口冲突参考 GitHub 文档使用帮助）。修改本机 Hosts 文件，对于 Windows 目录为：C:\\Windows\\System32\\drivers\\etc12# 任意添加一个网站代理到本地回环上127.0.0.1 omg.ccIDEA 中打开 JRebel 的激活界面。URL 处填写 http://omg.cc:8888/你找的GUID 3 以上哦，记得将激活类型改为 work offline，离线 180 天，不然每次开还是有些麻烦的。参考资料：https://github.com/ilanyu/ReverseProxyhttps://www.guidgenerator.com/online-guid-generator.aspx回到顶部 © Inkss","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://inkss.cn/tags/Java/"},{"name":"破解","slug":"破解","permalink":"https://inkss.cn/tags/破解/"}]},{"title":"Git 快速上手","slug":"18-09/Git快速上手","date":"2018-09-07T16:00:00.000Z","updated":"2019-09-10T08:20:32.463Z","comments":true,"path":"article/git/c8dc427f.html","link":"","permalink":"https://inkss.cn/article/git/c8dc427f.html","excerpt":"","text":"主要用于快速的介绍一下必要的 git 相关知识，事实上大都采用客户端进行 Git 的命令操作，纯使用命令行在终端下的场景并不是很多，本文以快速上手为主，使用 Typora 编写。 1 Windows 下 Git 配置下载地址：https://git-scm.com/ ，默认无脑下一步安装即可。关于环境变量：在我看来配置环境变量的必要性不是很大，可以使用默认的 shell 进行相关控制。 2 Git 基础概念 3 Git 命令回到顶部 © Inkss","categories":[{"name":"git","slug":"git","permalink":"https://inkss.cn/categories/git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://inkss.cn/tags/Git/"}]},{"title":"Linux 服务器配置 ASF 云挂卡","slug":"18-06/linux 服务器配置 ASF 云挂卡","date":"2018-06-03T16:00:00.000Z","updated":"2019-09-30T06:39:01.209Z","comments":true,"path":"article/info/b46ef429.html","link":"","permalink":"https://inkss.cn/article/info/b46ef429.html","excerpt":"","text":"ASF是由C#编写，能同时挂载多个 Steam 账号的挂卡工具。其不像 Idle Master 那样：同一时间只能为一个账号挂卡，需要后台运行 Steam 客户端，需启动额外进程模拟‘正在游戏’状态。ASF 不需要后台运行任何 Steam 客户端，不需要启动额外进程，而且能为不限数目的 Steam 账号同时挂卡。不仅如此，该软件还能在服务器和其他非桌面电脑上运行，并拥有完整支持 Mono 的特性，这能让其在 Windows、Linux 以及 OS X 等任何支持 Mon o的操作系统上运行。ASF 存在的基础要归功于 SteamKit2。 0.事先的约定：Steam 社区目前处于被墙状态，目前连接社区的手段有两种：（1） 修改 hosts，社区 Https 链接暂时不受影响。1vim /etc/hosts添加以下内容：123.50.18.229 steamcommunity.com #服务器重启后失效（2） 使用 AnotherSteamCommunityFix。通过修改 hosts 转发 HTTP 请求的方式临时性修复 SteamCommunity 在中国大陆无法访问的小工具注意：这个程序监听 443 和 80 端口，如果服务器运行 WEB 程序，则无法使用。 1.下载 ASF选择合适的版本从 GitHub 处下载：ArchiSteamFarm/releases 2.安装 .NET CoreASF 是 C# 编写，所以需要安装 .NET 运行时。 2.1 解决包依赖：Ubuntu:1sudo apt-get install libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl-dev uuid-dev unzipCentOS:1yum install libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl-dev uuid-dev unzip 2.2 注册微软签名 &amp; 添加微软源Ubuntu:123curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpgsudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpgsudo sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main\" &gt; /etc/apt/sources.list.d/dotnetdev.list'CentOS:12sudo rpm --import https://packages.microsoft.com/keys/microsoft.ascsudo sh -c 'echo -e \"[packages-microsoft-com-prod]\\nname=packages-microsoft-com-prod \\nbaseurl= https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" &gt; /etc/yum.repos.d/dotnetdev.repo' 2.3 安装 .NET Core SDKUbuntu:123sudo apt-get install apt-transport-httpssudo apt-get updatesudo apt-get install dotnet-sdk-2.1.103CentOS:123sudo yum updatesudo yum install libunwind libicusudo yum install dotnet-sdk-2.1.103 3.配置 ASF 3.1 安装当前最新正式版为：3.1.1.1 （你也可以照抄代码，因为 ASF 默认自动更新）12345mkdir ASFwget https://github.com/JustArchi/ArchiSteamFarm/releases/download/3.1.1.1/ASF-generic.zipmv ASF-generic.zip ASFcd ASFunzip ASF-generic.zip 3.2 配置ASF本地化进入到 config 目录，修改 ASF.json 文件12cd configvim ASF.json修改 CurrentCulture 字段：1”CurrentCulture”:”zh-CN”, 3.3 配置 Bot 文件官方的链接生成 bot 文件：ASF 配置文件生成器最简洁配置选项：1234SteamLogin 中输入 steam 账号 idSteamPassword 中输入 steam 密码Enabled 选 √IsBotAccount 选 ×点击 Download 就会下载一个和 Name 名字一样的 .json 文件将文件通过 FTP 上传到 ~/ASF/config/详细的属性配置介绍：ASF 官方 WIKI 中文版推荐的配置内容：1234567891011&#123; \"SteamLogin\": \"steam 账户名称\", \"SteamPassword\": \"steam 账户密码\", \"Enabled\": true, \"AcceptGifts\":true, \"FarmOffline\":false, \"CustomGamePlayedWhileIdle\": \"状态描述\", \"GamesPlayedWhileIdle\": [ 550,50 ]&#125; 3.4 启动 ASF 开始挂卡创建一个新窗口用于后台挂卡12screen -S ASFcd /ASF #进入到 ASF 所在目录添加可执行文件 ArchiSteamFarm 权限1chmod +x ArchiSteamFarm.sh执行程序1./ArchiSteamFarm.sh当前页面按 ctrl +a +d 进入后台恢复 screen 请终端输入：screen -r ASF参考资料：Ubuntu16.0.4 搭建ASF云挂卡环境Linux 下使用 ASF (ArchiSteamFarm) V3实现云挂卡Get started with .NET in 10 minuteslinux screen 命令详解 - David_Tang - 博客园zyfworks/AnotherSteamCommunityFixJustArchi/ArchiSteamFarmASF官方 WIKI 中文版另一个 SteamCommunityFixASF 配置文件生成器","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://inkss.cn/tags/Linux/"},{"name":"Steam","slug":"Steam","permalink":"https://inkss.cn/tags/Steam/"}]},{"title":"Linux 环境搭建饥荒服务器教程","slug":"18-06/UbuntuServer搭建饥荒服务端实验手册","date":"2018-06-03T16:00:00.000Z","updated":"2019-09-30T06:37:57.537Z","comments":true,"path":"article/info/77face98.html","link":"","permalink":"https://inkss.cn/article/info/77face98.html","excerpt":"","text":"概括流程安装软件运行环境；安装 Steam 客户端；在客户端中安装饥荒服务端；配置饥荒服务端属性；启动游戏。 一、解决环境依赖安装必要的库文件Ubuntu 系统需要的依赖：1sudo apt-get install libstdc++6:i386 libgcc1:i386 libcurl4-gnutls-dev:i386 lib32gcc1CentOS 系统需要的依赖：1yum -y install glibc.i686 libstdc++.i686 libcurl4-gnutls-dev.i686 libcurl.i686 二、安装 SteamCMD新建目录 steamcmd此目录用于 steam 程序的安装目录。1mkdir ~/steamcmd下载 SteamCMD 安装文件1wget -P ~/steamcmd https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz解压压缩包1cd ~/steamcmd1tar -xvzf ~/steamcmd/steamcmd_linux.tar.gz 三、安装饥荒服务端启动 steamcmd1./steamcmd.sh请耐心等待客户端安装，直到进入了: Steam&gt; 命令行模式。如有遇到安装进度不走，请使用 ctrl + c 强制退出后重试。使用公共账户登录 Steam1login anonymous指定游戏文件的安装目录1force_install_dir ../dontstarvetogether_dedicated_server安装饥荒服务端1app_update 343050 validate此过程所需时间视网络情况而定，请耐心等待下载。安装完成后，使用以下命令退出 Steam 客户端。1quit（1）成功安装所出现的标志：Success! App '343050' fully installed.（2）如果在安装过程中出现了:Error! App '232250' XXXXX...出现此类情况的原因是：Steam 存在网络连接问题。解决方案则是先执行 quit 退出 Steam 程序，再重复步奏 3.安装饥荒服务端 的所述内容。解决一个组件缺失1cd ~/dontstarvetogether_dedicated_server/bin/lib321ln -s /usr/lib/libcurl.so.4 libcurl-gnutls.so.4 四、配置饥荒服务端 （一）===================================【本节内容为使用手写的方式获取配置文件】===================================获取 cluster_token 和 UserID1.UserID打开饥荒联机版的客户端，进入游戏，点击位于右下角的 账号 按钮，进入浏览器，记录用户 ID 值。2.cluster_token在上一步的网页中，点击导航栏的 游戏 ，再点击 DST 的 服务器，进入页面后添加新服务器并记录内容。新建饥荒配置文件目录饥荒的配置目录位于: ~/.klei/DoNotStarveTogether该目录下存放的是游戏存档，我们手动创建一个存档目录：1mkdir -p ~/.klei/DoNotStarveTogether/MyDediServer1cd ~/.klei/DoNotStarveTogether/MyDediServer配置主配置文件新建 cluster.ini 文件，该文件定义了服务端的主要属性：1touch cluster.ini在该文件中主要属性解释如下：字段释义max_players最大在线人数game_mode游戏模式，可选：survival，endless，wildernesspause_when_empty服务器内无玩家时暂停vote_kick_enabled玩家投票踢人max_snapshots最大存档回滚次数1234567891011121314151617181920212223[GAMEPLAY]max_players = 6pvp = falsegame_mode = endlesspause_when_empty = truevote_kick_enabled = true[NETWORK]cluster_description = 服务器描述cluster_name = 服务器名称cluster_password = 服务器密码cluster_intention = cooperative[MISC]max_snapshots = 6console_enabled = true[SHARD]shard_enabled = truebind_ip = 127.0.0.1master_ip = 127.0.0.1master_port = 10889cluster_key = supersecretkey配置令牌和服务器管理员配置令牌：先新建 cluster_token.txt 文件，再将此前获取到的 Token 复制到文件中。1touch cluster_token.txt先新建 adminlist.txt 文件，再将此前获取到的 UserID 复制到文件中。1touch adminlist.txt配置地上部分请在 MyDediServer 目下新建 Master 目录：1mkdir Master1cd Master配置独立配置文件，新建 server.ini 文件。1touch server.ini文件内容如下：123456789101112[NETWORK]server_port = 11000[SHARD]is_master = true[STEAM]master_server_port = 27018authentication_port = 8768[ACCOUNT]encode_user_path = true配置地图文件，新建 worldgenoverride.lua 文件。1touch worldgenoverride.lua文件内容如下：1234return &#123; override_enabled = true, preset = \"SURVIVAL_TOGETHER\",&#125;配置地下部分地下部分与地上部分极其相似，但是两个实例互相独立。请在 MyDediServer 目下新建 Caves 目录：1mkdir Caves1cd Caves配置独立配置文件，新建 server.ini 文件。1touch server.ini文件内容如下：12345678910111213[NETWORK]server_port = 11001[SHARD]is_master = falsename = Caves[STEAM]master_server_port = 27019authentication_port = 8769[ACCOUNT]encode_user_path = true配置地图文件，新建 worldgenoverride.lua 文件。1touch worldgenoverride.lua文件内容如下：1234return &#123; override_enabled = true, preset = \"DST_CAVE\",&#125; 五、配置饥荒服务端 （二）===================================【本节内容为通过客户端获取配置文件】比较推荐，客户端提供了一个图像化界面配置世界属性。PS：有关 MOD 的配置和 双服务器 地上地下分离搭建部分也将在此部分提及。===================================利用客户端创建世界进入游戏，选择 创建游戏 ， 联机版 ，风格随意，在进一步的界面中填写相应内容（名称、描述、密码等）；切换选项卡至 森林 ，在此界面可以修改相关世界属性，同理 洞穴 选项卡配置的是地下部分的世界属性（先选择增加洞穴）；切换到 模组 选项卡，勾选需要在服务端启动的模组（记得同时配置模组）。大体的配置内容完成后，选择 形成世界 进入游戏，等到人物选择界面后即可退出客户端。提取配置文件以 Windows 为例（Linux/Mac 类似），存档位置位于 /Users/username/Documents/Klei/DoNotStarveTogether ，也就是文档目录下。在该目录的下一级目录中 有一个命名为 Cluster_X 的文件夹（X 为数字编号），提取出刚刚创建的存档。配置文件补充当然这个配置文件并不完整，需要做相应的补充。缺白名单、管理员等配置文件，参考上文内容补全即可。分离地上地下正在看本片文章的你，想必是打算使用学生主机来搭建饥荒服务端吧。然而很遗憾的是无论是腾讯云还是阿里云，所提供的学生云主机都无法承担同时运行地上、地下两个部分。而折中的方法自然也就是将地上地下分开搭建。先修改 cluster.ini 文件的 bind_ip 和 master_ip 内容1234[SHARD]shard_enabled = truebind_ip = 0.0.0.0 master_ip = 你的主服务器的 IP （地上）然后将文件夹命名为地上，再复制此文件夹，命名为地下。最后地上删除 Caves 目录，地下删除 Master 目录。Mod 模组配置Mod 的配置文件已经在提取到的文件夹中了，但是位于服务器的饥荒客户端还没有下载这些文件。进入到服务器的的饥荒安装目录：1cd ~/dontstarvetogether_dedicated_server/mods修改该目录下的 dedicated_server_mods_setup.lua 文件：123456vim dedicated_server_mods_setup.lua # 在该文件中添加类似这样的内容，这串 ID 是 Mod 文件在 Steam 中的 ID# 可以在提取到的配置文件的 Master/modoverrides.lua 中找到# 然后添加到本文件中，一行一个ServerModSetup(\"362175979\")文章末尾补充个人使用的 MOD 列表。上传配置文件到服务器使用 Ftp 的软件上传配置文件到服务器，相关位置可以参考上节内容。 六、启动游戏启动脚本在家目录下新建脚本文件：1cd ~ &amp;&amp; touch startDST.sh脚本内容如下：12345678910111213141516171819202122232425262728293031323334353637383940#!/bin/bashsteamcmd_dir=\"$HOME/steamcmd\"install_dir=\"$HOME/dontstarvetogether_dedicated_server\"cluster_name=\"MyDediServer\"dontstarve_dir=\"$HOME/.klei/DoNotStarveTogether\"function fail()&#123; echo Error: \"$@\" &gt;&amp;2 exit 1&#125;function check_for_file()&#123; if [ ! -e \"$1\" ]; then fail \"Missing file: $1\" fi&#125;cd \"$steamcmd_dir\" || fail \"Missing $steamcmd_dir directory!\"check_for_file \"steamcmd.sh\"check_for_file \"$dontstarve_dir/$cluster_name/cluster.ini\"check_for_file \"$dontstarve_dir/$cluster_name/cluster_token.txt\"check_for_file \"$dontstarve_dir/$cluster_name/Master/server.ini\"check_for_file \"$dontstarve_dir/$cluster_name/Caves/server.ini\"check_for_file \"$install_dir/bin\"cd \"$install_dir/bin\" || fail run_shared=(./dontstarve_dedicated_server_nullrenderer)run_shared+=(-console)run_shared+=(-cluster \"$cluster_name\")run_shared+=(-monitor_parent_process $$)\"$&#123;run_shared[@]&#125;\" -shard Caves | sed 's/^/Caves: /' &amp;\"$&#123;run_shared[@]&#125;\" -shard Master | sed 's/^/Master: /'给启动脚本添加权限：1chmod u+x ./startDST.sh启动游戏到此所有的配置过程结束，但是为了方便饥荒在后台运行。这里我们需要利用 screen 命令。利用 screen 命令创建一个新窗口，便于后台运行：1screen -S DST那么，现在请启动脚本，开始游戏吧1./startDST.sh退出 screenCtrl + A + D 七、附录验证服务器在线验证服务器运行的网站：Don’t Starve Together Server个人用 MOD1234567891011121314151617181920212223242526272829303132ServerModSetup(\"362175979\") -- Wormhole Marks 标记相联通的虫洞ServerModSetup(\"378160973\") -- Global Positions 小地图显示玩家位置 共享地图发现ServerModSetup(\"382177939\") -- DST Storm Cellar 风暴酒窖 80个插槽ServerModSetup(\"385006082\") -- DST Path Lights 路径灯在黄昏时开启，在黎明时关闭ServerModSetup(\"396822875\") -- Spike Trap 增加两个陷阱 ServerModSetup(\"444235588\") -- Deluxe Campfires 豪华营火 增加燃烧时间ServerModSetup(\"458587300\") -- Fast Travel 快速旅行ServerModSetup(\"458940297\") -- FFood Values 显示食物价值ServerModSetup(\"462372013\") -- Always fresh 冰箱里物品永远不坏 ServerModSetup(\"462434129\") -- Restart #重生 #复活 #自杀 Y:公聊 U:私聊ServerModSetup(\"604761020\") -- Multi Rocks 持久挖矿 让卵石更耐挖ServerModSetup(\"623286817\") -- Free transplant 移植无需施肥ServerModSetup(\"661253977\") -- Don't Drop Everything 死亡不掉落ServerModSetup(\"663554209\") -- Magic Freezer 更大个的冰箱 无损ServerModSetup(\"666155465\") -- Show Me 鼠标显示更多信息ServerModSetup(\"659459255\") -- Mandrake Tree 生成萤火虫ServerModSetup(\"714712361\") -- Starting NovicePacks 小橘子的新手礼包ServerModSetup(\"714719224\") -- Starting NovicePacks 小橘子的在线礼包ServerModSetup(\"785295023\") -- Super Wall DST 超级墙DST 无敌的超级墙、自动门、栅栏和栅栏门ServerModSetup(\"786556008\") -- 45 Inventory Slots 45个格子ServerModSetup(\"831523966\") -- 999 Stack Size 叠加物品到 999 个ServerModSetup(\"1301033176\") -- Chinese Language 中文语言包 汉化了人物台词ServerModSetup(\"1356189099\") -- [DST]旅行青蛙 旅行青蛙ServerModSetup(\"1463539363\") -- Automatic Gardener 自动园丁ServerModSetup(\"1510231311\") -- 人物 RingoServerModSetup(\"1548459642\") -- 人物 HachiServerModSetup(\"1592689346\") -- 人物 花花ServerModSetup(\"1418746242\") -- 汉化增强 Chinese++ (含中文高清字体)ServerModSetup(\"572538624\") -- Chinese Plus 中文汉化增强ServerModSetup(\"367546858\") -- Chinese Language Pack 中文语言包原文地址Ubuntu Server 搭建饥荒服务端实验室地址腾讯云 - 开发者实验室","categories":[{"name":"info","slug":"info","permalink":"https://inkss.cn/categories/info/"}],"tags":[{"name":"饥荒","slug":"饥荒","permalink":"https://inkss.cn/tags/饥荒/"},{"name":"Linux","slug":"Linux","permalink":"https://inkss.cn/tags/Linux/"}]}]}